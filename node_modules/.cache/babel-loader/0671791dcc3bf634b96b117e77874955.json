{"ast":null,"code":"import _regeneratorRuntime from\"/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import axios from\"axios\";import{weather}from'./types';var config={withCredentials:true};var ax=axios.create(config);export var getWeather=function getWeather(url){return function _callee(dispatch){var res;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(ax.get(url));case 2:res=_context.sent;try{dispatch({type:weather.GETWEATHER,payload:res.data});}catch(error){console.log(error);}case 4:case\"end\":return _context.stop();}}});};};export var handleAddToUserData=function handleAddToUserData(url,data){return function(dispatch){ax.post(url,data).then(function(res){dispatch({type:weather.POSTWEATHER,payload:res.config.data});}).catch(function(err){return console.log(err);});};};export var deleteOneWeather=function deleteOneWeather(url,data){return function(dispatch){var location=data.location;ax.delete(url,data).then(function(res){dispatch({type:weather.DELETEONEWEATHER,payload:location});}).catch(function(err){return console.log(err);});};};export var changeTemp=function changeTemp(val){return function(dispatch){ax.put(val).then(function(){dispatch({type:weather.TEMPERATURE,payload:val});}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/redux/actions/weather.js"],"names":["axios","weather","config","withCredentials","ax","create","getWeather","url","dispatch","get","res","type","GETWEATHER","payload","data","error","console","log","handleAddToUserData","post","then","POSTWEATHER","catch","err","deleteOneWeather","location","delete","DELETEONEWEATHER","changeTemp","val","put","TEMPERATURE"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,SAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,eAAe,CAAE,IADN,CAAf,CAIA,GAAMC,CAAAA,EAAE,CAAGJ,KAAK,CAACK,MAAN,CAAaH,MAAb,CAAX,CAEA,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,GAAG,QAAI,kBAAOC,QAAP,4KACXJ,EAAE,CAACK,GAAH,CAAOF,GAAP,CADW,SACvBG,GADuB,eAE7B,GAAI,CACAF,QAAQ,CAAC,CAACG,IAAI,CAAEV,OAAO,CAACW,UAAf,CAA2BC,OAAO,CAAEH,GAAG,CAACI,IAAxC,CAAD,CAAR,CACH,CACD,MAAOC,KAAP,CAAc,CACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAP4B,8CAAJ,EAAtB,CAUP,MAAO,IAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACX,GAAD,CAAMO,IAAN,QAAe,UAAAN,QAAQ,CAAI,CAC1DJ,EAAE,CAACe,IAAH,CAAQZ,GAAR,CAAaO,IAAb,EACCM,IADD,CACM,SAAAV,GAAG,CAAI,CACTF,QAAQ,CAAC,CACLG,IAAI,CAAEV,OAAO,CAACoB,WADT,CAELR,OAAO,CAAEH,GAAG,CAACR,MAAJ,CAAWY,IAFf,CAAD,CAAR,CAIH,CAND,EAOCQ,KAPD,CAOO,SAAAC,GAAG,QAAIP,CAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ,EAPV,EAQH,CATkC,EAA5B,CAWP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACjB,GAAD,CAAMO,IAAN,QAAe,UAAAN,QAAQ,CAAI,CACvD,GAAMiB,CAAAA,QAAQ,CAAGX,IAAI,CAACW,QAAtB,CACArB,EAAE,CAACsB,MAAH,CAAUnB,GAAV,CAAeO,IAAf,EACCM,IADD,CACM,SAAAV,GAAG,CAAI,CACTF,QAAQ,CAAC,CACLG,IAAI,CAAEV,OAAO,CAAC0B,gBADT,CAELd,OAAO,CAAEY,QAFJ,CAAD,CAAR,CAIH,CAND,EAOCH,KAPD,CAOO,SAAAC,GAAG,QAAIP,CAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ,EAPV,EAQH,CAV+B,EAAzB,CAYP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,QAAS,UAAArB,QAAQ,CAAI,CAC3CJ,EAAE,CAAC0B,GAAH,CAAOD,GAAP,EACCT,IADD,CACM,UAAM,CACRZ,QAAQ,CAAC,CACLG,IAAI,CAAEV,OAAO,CAAC8B,WADT,CAELlB,OAAO,CAAEgB,GAFJ,CAAD,CAAR,CAIH,CAND,EAOCP,KAPD,CAOO,SAAAC,GAAG,QAAIP,CAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ,EAPV,EAQH,CATyB,EAAnB","sourcesContent":["import axios from \"axios\";\nimport { weather } from './types';\n\nconst config = {\n    withCredentials: true\n}\n\nconst ax = axios.create(config);\n\nexport const getWeather = url => async (dispatch) => {\n    const res = await ax.get(url);\n    try {\n        dispatch({type: weather.GETWEATHER, payload: res.data});\n    } \n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const handleAddToUserData = (url, data) => dispatch => {\n    ax.post(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.POSTWEATHER,\n            payload: res.config.data\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const deleteOneWeather = (url, data) => dispatch => {\n    const location = data.location;\n    ax.delete(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.DELETEONEWEATHER,\n            payload: location\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const changeTemp = (val) => dispatch => {\n    ax.put(val)\n    .then(() => {\n        dispatch({\n            type: weather.TEMPERATURE,\n            payload: val\n        })\n    })\n    .catch(err => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}