{"ast":null,"code":"import _objectSpread from \"/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { handleAddToUserData, getWeather, changeTemp } from \"../../redux/actions/weather\";\nimport SearchResults from './SearchResults';\nimport UserSelectedData from './UserSelectedData';\nimport UserSelectedCity from './UserSelectedCity';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewCity = e => {\n      if (e.target.textContent !== \"Ã—\") {\n        const userSelectedCity = e.target.closest(\".user-selected-child\").querySelector(\"h6\").textContent;\n        const cityObject = this.props.storedWeatherData.filter((el, i) => el.location === userSelectedCity);\n        this.setState({\n          selectCity: cityObject[0]\n        });\n        this.selectedCityData.current.style.display = \"flex\";\n      }\n    };\n\n    this.dataLimitFalse = () => {\n      this.setState({\n        dataLimit: false\n      });\n    };\n\n    this.handleTemp = e => {\n      let type = e.target.value;\n      this.props.changeTemp(`/api/weather/${this.state.urlUserName}/${type}`);\n      window.location.reload();\n    };\n\n    this.selectCity = e => {\n      e.preventDefault();\n\n      if (this.props.storedWeatherData.length === 5) {\n        this.setState({\n          dataLimit: true\n        });\n      }\n\n      let query = encodeURIComponent(e.target.search.value);\n      let weatherData = {\n        lat: \"\",\n        lng: \"\",\n        location: \"\",\n        desc: \"\",\n        currTempF: \"\",\n        minTempF: \"\",\n        maxTempF: \"\",\n        currTempC: \"\",\n        minTempC: \"\",\n        maxTempC: \"\",\n        humidity: \"\",\n        windSpeedM: \"\",\n        windSpeedK: \"\",\n        windDirDeg: \"\",\n        index: \"\",\n        icon: \"\" // windGust: \"\"\n\n      };\n      weatherData.location = e.target.search.value.split(',')[0];\n      this.props.storedWeatherData.forEach((el, i) => {\n        if (weatherData.location === el.location) {\n          this.setState({\n            duplicateSearch: true\n          });\n        }\n      });\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?&address=${query}&key=AIzaSyDnNkqJyGkWjJcQxN2dGcZr5KHnw1mlB7A`).then(res => res.json()).then(res => {\n        weatherData.lat = res.results[0].geometry.bounds.northeast.lat;\n        weatherData.lng = res.results[0].geometry.bounds.northeast.lng;\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${weatherData.lat}&lon=${weatherData.lng}&appid=7ce1fd394a7aaa5d61d9b5930c1b3513&units=imperial`);\n      }).then(res => res.json()).then(res => {\n        const weather = res.weather,\n              main = res.main,\n              wind = res.wind; // weatherData.location = res.name;\n\n        weatherData.desc = weather[0].main;\n        weatherData.currTempF = Math.round(main.temp);\n        weatherData.minTempF = Math.round(main.temp_min);\n        weatherData.maxTempF = Math.round(main.temp_max);\n        weatherData.currTempC = Math.round((weatherData.currTempF - 32) / 1.8);\n        weatherData.minTempC = Math.round((weatherData.minTempF - 32) / 1.8);\n        weatherData.maxTempC = Math.round((weatherData.maxTempF - 32) / 1.8);\n        weatherData.humidity = Math.round(main.humidity);\n        weatherData.windSpeedM = Math.round(wind.speed);\n        weatherData.windSpeedK = Math.round(wind.speed * 1.609344);\n        weatherData.windDir = Math.round(wind.deg);\n        weatherData.index = this.props.storedWeatherData.length;\n        weatherData.icon = weather[0].icon; // weatherData.windGust = Math.round(wind.gust);\n      }).then(() => {\n        this.setState(_objectSpread({}, this.state, {\n          weatherData: _objectSpread({}, weatherData)\n        }));\n      }) // .then(()=> {\n      //   this.renderedWeatherData.current.innerHTML = <SearchResults weatherData={this.state.weatherData}/>;\n      // })\n      .then(() => {\n        this.renderedWeatherData.current.style.display = \"flex\";\n      }).catch(err => console.log(`Something wrong happened: ${err}`)).finally(console.log('weather search finished'));\n      e.target.search.value = \"\";\n    };\n\n    this.renderWeatherData = data => {\n      return React.createElement(SearchResults, {\n        weatherData: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    };\n\n    this.handleDelete = type => {\n      if (type === \"search\") {\n        this.setState({\n          weatherData: {}\n        });\n\n        if (this.state.duplicateSearch) {\n          this.setState({\n            duplicateSearch: false\n          });\n        }\n\n        this.renderedWeatherData.current.style.display = \"none\";\n      } else if (type === \"select\") {\n        this.setState({\n          selectCity: {}\n        });\n        this.selectedCityData.current.style.display = \"none\";\n      }\n    };\n\n    this.addToDB = () => {\n      console.log('add to db');\n      const _this$state = this.state,\n            urlUserName = _this$state.urlUserName,\n            weatherData = _this$state.weatherData;\n      this.props.handleAddToUserData(`/api/weather/${urlUserName}`, weatherData);\n      this.handleDelete(\"search\");\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.renderedWeatherData = React.createRef();\n    this.selectedCityData = React.createRef(); //local state will only be used for when a user is adding a city.\n\n    this.state = {\n      duplicateSearch: false,\n      dataLimit: false,\n      selectCity: {} // weatherData: {\n      // lat: undefined,\n      // lng: undefined,\n      // location: undefined,\n      // desc: undefined,\n      // currTemp: undefined,\n      // minTemp: undefined,\n      // maxTemp: undefined,\n      // humidity: undefined,\n      // windSpeed: undefined,\n      // windDir: undefined,\n      // windGust: undefined\n      // }\n\n    };\n  }\n\n  componentDidUpdate() {\n    this.renderWeatherData(this.state.weatherData);\n  }\n\n  componentDidMount() {\n    console.log(this.props.tempValue);\n    const url = window.location.pathname.split('/');\n    const urlUserName = url[url.length - 1];\n    this.setState(_objectSpread({\n      urlUserName\n    }, this.state), () => {\n      this.props.getWeather(`/api/weather/${urlUserName}`);\n    });\n  }\n\n  render() {\n    const user = this.props.auth.user;\n    const _this$props = this.props,\n          storedWeatherData = _this$props.storedWeatherData,\n          tempValue = _this$props.tempValue;\n    const _this$state2 = this.state,\n          urlUserName = _this$state2.urlUserName,\n          duplicateSearch = _this$state2.duplicateSearch,\n          selectCity = _this$state2.selectCity;\n    return React.createElement(\"div\", {\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Hey there,\"), \" \", user.name.split(\" \")[0], React.createElement(\"p\", {\n      className: \"flow-text grey-text text-darken-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Welcome to Weather in .GIFS! Find your city to get started.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), \"Then, click on a city you selected to view the .gif!\")), React.createElement(\"form\", {\n      onSubmit: this.selectCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Search by city:\"), React.createElement(\"div\", {\n      className: \"flexRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      placeholder: \"Ex: Atlanta, GA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.locateCity,\n      className: \"btn waves-effect waves-light hoverable blue accent-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Search!\"))), React.createElement(\"div\", {\n      className: \"selectedCityData\",\n      ref: this.selectedCityData,\n      style: {\n        'display': 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, Object.keys(this.state.selectCity).length === 0 ? false : React.createElement(UserSelectedCity, {\n      data: this.state.selectCity,\n      handleDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"renderedWeatherData\",\n      ref: this.renderedWeatherData,\n      style: {\n        'display': 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, !!this.state.weatherData ? React.createElement(SearchResults, {\n      weatherData: this.state.weatherData,\n      handleDelete: this.handleDelete,\n      addToDB: this.addToDB,\n      dataLength: this.props.storedWeatherData,\n      duplicateSearch: this.state.duplicateSearch,\n      dataLimit: this.state.dataLimit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }) : false), React.createElement(\"div\", {\n      className: \"user-selcted-weather\",\n      onClick: this.viewCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, storedWeatherData.map((el, i) => {\n      return React.createElement(UserSelectedData, {\n        key: i,\n        data: el,\n        urlUserName: urlUserName,\n        index: el.index,\n        location: el.location,\n        icon: el.icon,\n        dataLimitFalse: this.dataLimitFalse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      });\n    })), React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      onClick: this.onLogoutClick,\n      className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"selectLabel\",\n      htmlFor: \"selectTemp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"C\\xB0 / F\\xB0\"), React.createElement(\"select\", {\n      name: \"selectTemp\",\n      value: tempValue,\n      onChange: this.handleTemp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"F\\xB0\"), React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"C\\xB0\"))))));\n  }\n\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  storedWeatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  handleAddToUserData,\n  getWeather,\n  changeTemp\n})(Dashboard);","map":{"version":3,"sources":["/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/Dashboard.js"],"names":["React","Component","PropTypes","connect","logoutUser","handleAddToUserData","getWeather","changeTemp","SearchResults","UserSelectedData","UserSelectedCity","Dashboard","constructor","props","viewCity","e","target","textContent","userSelectedCity","closest","querySelector","cityObject","storedWeatherData","filter","el","i","location","setState","selectCity","selectedCityData","current","style","display","dataLimitFalse","dataLimit","handleTemp","type","value","state","urlUserName","window","reload","preventDefault","length","query","encodeURIComponent","search","weatherData","lat","lng","desc","currTempF","minTempF","maxTempF","currTempC","minTempC","maxTempC","humidity","windSpeedM","windSpeedK","windDirDeg","index","icon","split","forEach","duplicateSearch","fetch","then","res","json","results","geometry","bounds","northeast","weather","main","wind","Math","round","temp","temp_min","temp_max","speed","windDir","deg","renderedWeatherData","catch","err","console","log","finally","renderWeatherData","data","handleDelete","addToDB","onLogoutClick","createRef","componentDidUpdate","componentDidMount","tempValue","url","pathname","render","user","auth","name","locateCity","Object","keys","map","width","borderRadius","letterSpacing","marginTop","propTypes","func","isRequired","object","mapStateToProps","temperature"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { handleAddToUserData, getWeather, changeTemp } from \"../../redux/actions/weather\";\n\nimport SearchResults from './SearchResults';\nimport UserSelectedData from './UserSelectedData';\nimport UserSelectedCity from './UserSelectedCity';\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.renderedWeatherData = React.createRef();\n    this.selectedCityData = React.createRef();\n\n    //local state will only be used for when a user is adding a city.\n    this.state = {\n      duplicateSearch: false,\n      dataLimit: false,\n      selectCity: {},\n      // weatherData: {\n        // lat: undefined,\n        // lng: undefined,\n        // location: undefined,\n        // desc: undefined,\n        // currTemp: undefined,\n        // minTemp: undefined,\n        // maxTemp: undefined,\n        // humidity: undefined,\n        // windSpeed: undefined,\n        // windDir: undefined,\n        // windGust: undefined\n      // }\n    };\n  }\n\n  componentDidUpdate() {\n    this.renderWeatherData(this.state.weatherData);\n  }\n\n  componentDidMount() {\n    console.log(this.props.tempValue);\n    const url = window.location.pathname.split('/');\n    const urlUserName = url[url.length-1];\n    this.setState({\n      urlUserName,\n      ...this.state\n    }, () => {\n      this.props.getWeather(`/api/weather/${urlUserName}`);\n    });\n  }\n\n  viewCity = e => {\n    if(e.target.textContent !== \"Ã—\") {\n      const userSelectedCity = e.target.closest(\".user-selected-child\").querySelector(\"h6\").textContent;\n      const cityObject = this.props.storedWeatherData.filter((el, i) => el.location === userSelectedCity);\n      this.setState({selectCity: cityObject[0]});\n      this.selectedCityData.current.style.display = \"flex\";  \n    }\n  }\n\n  dataLimitFalse = () => {\n    this.setState({dataLimit: false});\n  }\n\n  handleTemp = (e) => {\n    let type = e.target.value;\n    this.props.changeTemp(`/api/weather/${this.state.urlUserName}/${type}`);\n    window.location.reload();\n  }\n\n  selectCity = e => {\n    e.preventDefault();\n    if (this.props.storedWeatherData.length === 5) {\n      this.setState({dataLimit: true});\n    }\n    let query = encodeURIComponent(e.target.search.value);\n    let weatherData = {\n      lat: \"\",\n      lng: \"\",\n      location: \"\",\n      desc: \"\",\n      currTempF: \"\",\n      minTempF: \"\",\n      maxTempF: \"\",\n      currTempC: \"\",\n      minTempC: \"\",\n      maxTempC: \"\",\n      humidity: \"\",\n      windSpeedM: \"\",\n      windSpeedK: \"\",\n      windDirDeg: \"\",\n      index: \"\",\n      icon: \"\"\n      // windGust: \"\"\n    };\n    weatherData.location = e.target.search.value.split(',')[0];\n    this.props.storedWeatherData.forEach((el,i) => {\n      if (weatherData.location === el.location) {\n        this.setState({duplicateSearch: true});\n      }\n    });\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?&address=${query}&key=AIzaSyDnNkqJyGkWjJcQxN2dGcZr5KHnw1mlB7A`)\n      .then(res => res.json())\n      .then(res => {\n        weatherData.lat = res.results[0].geometry.bounds.northeast.lat;\n        weatherData.lng = res.results[0].geometry.bounds.northeast.lng;\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${weatherData.lat}&lon=${weatherData.lng}&appid=7ce1fd394a7aaa5d61d9b5930c1b3513&units=imperial`)\n      })\n      .then(res => res.json())\n      .then(res => {\n        const { weather, main, wind } = res;\n        // weatherData.location = res.name;\n        weatherData.desc = weather[0].main;\n        weatherData.currTempF = Math.round(main.temp);\n        weatherData.minTempF = Math.round(main.temp_min);\n        weatherData.maxTempF = Math.round(main.temp_max);\n        weatherData.currTempC = Math.round((weatherData.currTempF - 32) / 1.8);\n        weatherData.minTempC = Math.round((weatherData.minTempF - 32) / 1.8);\n        weatherData.maxTempC = Math.round((weatherData.maxTempF - 32) / 1.8);\n        weatherData.humidity = Math.round(main.humidity);\n        weatherData.windSpeedM = Math.round(wind.speed);\n        weatherData.windSpeedK = Math.round(wind.speed * 1.609344);\n        weatherData.windDir = Math.round(wind.deg);\n        weatherData.index = this.props.storedWeatherData.length;\n        weatherData.icon = weather[0].icon;\n        // weatherData.windGust = Math.round(wind.gust);\n      })\n      .then(() => {\n        this.setState({\n          ...this.state,\n          weatherData: {\n            ...weatherData\n          }\n        });\n      })\n      // .then(()=> {\n      //   this.renderedWeatherData.current.innerHTML = <SearchResults weatherData={this.state.weatherData}/>;\n      // })\n      .then(() => {\n        this.renderedWeatherData.current.style.display = \"flex\";\n      })\n      .catch(err => console.log(`Something wrong happened: ${err}`))\n      .finally(console.log('weather search finished'));\n      e.target.search.value = \"\";\n  }\n\n  renderWeatherData = data => {\n    return <SearchResults weatherData={data}/>\n  }\n\n  handleDelete = (type) => {\n    if (type === \"search\") {\n      this.setState({\n        weatherData: {}\n      });\n      if (this.state.duplicateSearch) {\n        this.setState({duplicateSearch: false});\n      }\n      this.renderedWeatherData.current.style.display=\"none\";  \n    } else if (type === \"select\") {\n      this.setState({selectCity: {}});\n      this.selectedCityData.current.style.display=\"none\";  \n    }\n  }\n\n  addToDB = () => {\n    console.log('add to db');\n    const { urlUserName, weatherData } = this.state;\n    this.props.handleAddToUserData(`/api/weather/${urlUserName}`, weatherData);\n    this.handleDelete(\"search\");\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\nrender() {\n    const { user } = this.props.auth;\n    const { storedWeatherData, tempValue } = this.props;\n    const { urlUserName, duplicateSearch, selectCity } = this.state;\n    return (\n      <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                Welcome to Weather in .GIFS! Find your city to get started.<br/>\n                Then, click on a city you selected to view the .gif!\n              </p>\n            </h4>\n            <form onSubmit={this.selectCity}>\n              <label htmlFor=\"search\">Search by city:</label>\n              <div className=\"flexRow\">\n                <input type=\"text\" name=\"search\" placeholder=\"Ex: Atlanta, GA\"/>\n                <button onClick={this.locateCity} className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                  Search!\n                </button>\n              </div>\n            </form>\n            <div className=\"selectedCityData\" ref={this.selectedCityData} style={{'display': 'none'}}>\n              {Object.keys(this.state.selectCity).length === 0 ? false : <UserSelectedCity data={this.state.selectCity} handleDelete={this.handleDelete}/>}\n              {/* {this.state.selectCity ? <UserSelectedCity data={this.state.selectCity}/> : false} */}\n            </div>\n            <div className=\"renderedWeatherData\" ref={this.renderedWeatherData} style={{'display': 'none'}}>\n              {!!this.state.weatherData ? <SearchResults \n              weatherData={this.state.weatherData} \n              handleDelete={this.handleDelete}\n              addToDB={this.addToDB}\n              dataLength={this.props.storedWeatherData}\n              duplicateSearch={this.state.duplicateSearch}\n              dataLimit={this.state.dataLimit}/> : false}\n            </div>\n            <div className=\"user-selcted-weather\" onClick={this.viewCity}>\n              {storedWeatherData.map((el, i) => {\n                return <UserSelectedData \n                          key={i} \n                          data={el} \n                          urlUserName={urlUserName} \n                          index={el.index} \n                          location={el.location}\n                          icon={el.icon}\n                          dataLimitFalse={this.dataLimitFalse}/>\n              })}\n            </div>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n            <div>\n            <label className=\"selectLabel\" htmlFor=\"selectTemp\">C&deg; / F&deg;</label>\n            <select name=\"selectTemp\" value={tempValue} onChange={this.handleTemp}>\n              <option value=\"F\">F&deg;</option>\n              <option value=\"C\">C&deg;</option>\n            </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  storedWeatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect(\n  mapStateToProps,\n  { \n    logoutUser,\n    handleAddToUserData,\n    getWeather,\n    changeTemp\n  }\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}