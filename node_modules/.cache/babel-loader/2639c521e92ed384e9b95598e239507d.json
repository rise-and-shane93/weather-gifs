{"ast":null,"code":"var _jsxFileName = \"/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/UserSelectedCity.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UserSelectedCity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGif = searchTerm => {\n      let arr = [];\n      fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`).then(res => res.json()).then(res => {\n        console.log(res.data);\n        res.data.forEach((el, i) => {\n          arr.push(el.images.original.url);\n        });\n      }).then(res => {\n        this.setState({\n          gifArr: arr[Math.floor(Math.random() * arr.length)]\n        });\n      }).catch(err => console.log(err)).finally(console.log(\"gif search finished\"));\n    };\n\n    this.degtoDir = deg => {\n      if (deg <= 10 && deg >= 355) {\n        return \"N\";\n      } else if (deg > 10 && deg <= 30) {\n        return \"NNE\";\n      } else if (deg > 30 && deg <= 60) {\n        return \"NE\";\n      } else if (deg > 60 && deg < 80) {\n        return \"ENE\";\n      } else if (deg >= 80 && deg <= 100) {\n        return \"E\";\n      } else if (deg > 100 && deg <= 120) {\n        return \"ESE\";\n      } else if (deg > 120 && deg <= 140) {\n        return \"SE\";\n      } else if (deg > 140 && deg <= 160) {\n        return \"SSE\";\n      } else if (deg > 160 && deg <= 190) {\n        return \"S\";\n      } else if (deg > 190 && deg <= 210) {\n        return \"SSW\";\n      } else if (deg > 210 && deg <= 230) {\n        return \"SW\";\n      } else if (deg > 230 && deg <= 250) {\n        return \"WSW\";\n      } else if (deg > 250 && deg <= 280) {\n        return \"W\";\n      } else if (deg > 280 && deg <= 300) {\n        return \"WNW\";\n      } else if (deg > 300 && deg <= 320) {\n        return \"NW\";\n      } else if (deg > 320 && deg <= 355) {\n        return \"NNW\";\n      }\n    };\n\n    this.iconClose = React.createRef();\n    this.state = {\n      hover: false,\n      gifArr: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getGif(this.props.data.desc);\n  }\n\n  render() {\n    const _this$props$data = this.props.data,\n          location = _this$props$data.location,\n          desc = _this$props$data.desc,\n          humidity = _this$props$data.humidity,\n          currTempC = _this$props$data.currTempC,\n          currTempF = _this$props$data.currTempF,\n          maxTempC = _this$props$data.maxTempC,\n          maxTempF = _this$props$data.maxTempF,\n          minTempC = _this$props$data.minTempC,\n          minTempF = _this$props$data.minTempF,\n          windDir = _this$props$data.windDir,\n          windSpeedM = _this$props$data.windSpeedM,\n          windSpeedK = _this$props$data.windSpeedK,\n          tempValue = _this$props$data.tempValue;\n    let farStyle, celStyle, mileStyle, kiloStyle;\n    let direction = this.degtoDir(windDir); // let selectedGif = this.state.gifArr[Math.floor(Math.random() * this.state.gifArr.length)];\n\n    if (tempValue === \"F\") {\n      farStyle = {\n        display: \"inline\"\n      };\n      mileStyle = {\n        display: \"inline\"\n      };\n      celStyle = {\n        display: \"none\"\n      };\n      kiloStyle = {\n        display: \"none\"\n      };\n    } else {\n      farStyle = {\n        display: \"none\"\n      };\n      mileStyle = {\n        display: \"none\"\n      };\n      celStyle = {\n        display: \"inline\"\n      };\n      kiloStyle = {\n        display: \"inline\"\n      };\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"selected-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, location), React.createElement(\"button\", {\n      id: \"deleteSelection\",\n      onClick: () => this.props.handleDelete(\"select\"),\n      className: \"btn waves-effect waves-light hoverable blue accent-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"p\", {\n      className: \"selected-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, desc), React.createElement(\"img\", {\n      className: \"selected-gif\",\n      srcSet: this.state.gifArr,\n      alt: \"weather gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"additionalData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"selected-humidity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Humidity:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), humidity, \"%\"), React.createElement(\"p\", {\n      className: \"selected-currTemp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Currently:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: farStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, currTempF, \"\\xB0F\"), React.createElement(\"span\", {\n      style: celStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, currTempC, \"\\xB0C\")), React.createElement(\"p\", {\n      className: \"selected-maxMinTemp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: farStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"High / Low: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), maxTempF, \"\\xB0F / \", minTempF, \"\\xB0F\"), React.createElement(\"span\", {\n      style: celStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"High / Low: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), maxTempC, \"\\xB0C / \", minTempC, \"\\xB0C\")), React.createElement(\"p\", {\n      className: \"selected-wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Direction: \", direction, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \" Speed:\", React.createElement(\"span\", {\n      style: mileStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, windSpeedM, \"mph\"), React.createElement(\"span\", {\n      style: kiloStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, windSpeedK, \"kph\"))));\n  }\n\n} // SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect(mapStateToProps)(UserSelectedCity);","map":{"version":3,"sources":["/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/UserSelectedCity.js"],"names":["React","Component","PropTypes","connect","UserSelectedCity","constructor","props","getGif","searchTerm","arr","fetch","then","res","json","console","log","data","forEach","el","i","push","images","original","url","setState","gifArr","Math","floor","random","length","catch","err","finally","degtoDir","deg","iconClose","createRef","state","hover","undefined","componentDidMount","desc","render","location","humidity","currTempC","currTempF","maxTempC","maxTempF","minTempC","minTempF","windDir","windSpeedM","windSpeedK","tempValue","farStyle","celStyle","mileStyle","kiloStyle","direction","display","handleDelete","mapStateToProps","weatherData","weather","temperature"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UserSelectedCity extends Component {\n\nconstructor(props) {\n    super(props);\n    this.iconClose = React.createRef();\n    this.state = {\n      hover: false,\n      gifArr: undefined\n    }\n}\n\ngetGif = (searchTerm) => {\n  let arr = [];\n  fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`)\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      res.data.forEach((el, i) => {\n        arr.push(el.images.original.url);\n      })\n    })\n    .then(res => {\n      this.setState({gifArr: arr[Math.floor(Math.random() * arr.length)]});\n    })\n    .catch(err => console.log(err))\n    .finally(console.log(\"gif search finished\"))\n}\n\ncomponentDidMount() {\n  this.getGif(this.props.data.desc);\n}\n\ndegtoDir = deg => {\n  if (deg <= 10 && deg >= 355) {\n    return \"N\";\n  } else if (deg > 10 && deg <= 30) {\n    return \"NNE\";\n  } else if (deg > 30 && deg <= 60) {\n    return \"NE\";\n  } else if (deg > 60 && deg < 80) {\n    return \"ENE\";\n  } else if (deg >= 80 && deg <= 100) {\n    return \"E\";\n  } else if (deg > 100 && deg <= 120) {\n    return \"ESE\";\n  } else if (deg > 120 && deg <= 140) {\n    return \"SE\";\n  } else if (deg > 140 && deg <= 160) {\n    return \"SSE\";\n  } else if (deg > 160 && deg <= 190) {\n    return \"S\";\n  } else if (deg > 190 && deg <= 210) {\n    return \"SSW\";\n  } else if (deg > 210 && deg <= 230) {\n    return \"SW\";\n  } else if (deg > 230 && deg <= 250) {\n    return \"WSW\";\n  } else if (deg > 250 && deg <= 280) {\n    return \"W\";\n  } else if (deg > 280 && deg <= 300) {\n    return \"WNW\";\n  } else if (deg > 300 && deg <= 320) {\n    return \"NW\";\n  } else if (deg > 320 && deg <= 355) {\n    return \"NNW\";\n  }\n}\n\nrender() {\n  const { location, desc, humidity, currTempC, currTempF, maxTempC, \n    maxTempF, minTempC, minTempF, windDir, windSpeedM, windSpeedK, tempValue } = this.props.data;\n  let farStyle, celStyle, mileStyle, kiloStyle;\n  let direction = this.degtoDir(windDir);\n  // let selectedGif = this.state.gifArr[Math.floor(Math.random() * this.state.gifArr.length)];\n  if (tempValue === \"F\") {\n     farStyle = {display: \"inline\"};\n     mileStyle = {display: \"inline\"};\n     celStyle = {display: \"none\"};\n     kiloStyle = {display: \"none\"};\n  } else {\n    farStyle = {display: \"none\"};\n    mileStyle = {display: \"none\"};\n    celStyle = {display: \"inline\"};\n    kiloStyle = {display: \"inline\"};\n  }\n    return (\n    <div>\n        <h2 className=\"selected-location\">{location}</h2>\n        <button id=\"deleteSelection\" onClick={() => this.props.handleDelete(\"select\")}\n        className=\"btn waves-effect waves-light hoverable blue accent-3\">\n            Close\n        </button>\n        <p className=\"selected-desc\">{desc}</p>\n        <img className=\"selected-gif\" srcSet={this.state.gifArr} alt=\"weather gif\"/>\n        <div className=\"additionalData\">\n            <p className=\"selected-humidity\">Humidity:<br/>{humidity}%</p>\n            <p className=\"selected-currTemp\">Currently:<br/>\n                <span style={farStyle}>{currTempF}&deg;F</span>\n                <span style={celStyle}>{currTempC}&deg;C</span>\n            </p>\n            <p className=\"selected-maxMinTemp\">\n                <span style={farStyle}>High / Low: <br/>{maxTempF}&deg;F / {minTempF}&deg;F</span>\n                <span style={celStyle}>High / Low: <br/>{maxTempC}&deg;C / {minTempC}&deg;C</span>\n            </p>\n            <p className=\"selected-wind\">Direction: {direction}<br/> Speed: \n              <span style={mileStyle}>{windSpeedM}mph</span>\n              <span style={kiloStyle}>{windSpeedK}kph</span>\n            </p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect (mapStateToProps)(UserSelectedCity);"]},"metadata":{},"sourceType":"module"}