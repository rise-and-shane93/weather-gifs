{"ast":null,"code":"var _jsxFileName = \"/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/SearchResults.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGif = searchTerm => {\n      let arr = [];\n      fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`).then(res => res.json()).then(res => {\n        console.log(res.data);\n        res.data.forEach((el, i) => {\n          arr.push(el.images.original.url);\n        });\n      }).then(res => {\n        this.setState({\n          gifArr: arr[Math.floor(Math.random() * arr.length)]\n        });\n      }).catch(err => console.log(err)).finally(console.log(\"gif search finished\"));\n    };\n\n    this.degtoDir = deg => {\n      if (deg <= 10 && deg >= 355) {\n        return \"N\";\n      } else if (deg > 10 && deg <= 30) {\n        return \"NNE\";\n      } else if (deg > 30 && deg <= 60) {\n        return \"NE\";\n      } else if (deg > 60 && deg < 80) {\n        return \"ENE\";\n      } else if (deg >= 80 && deg <= 100) {\n        return \"E\";\n      } else if (deg > 100 && deg <= 120) {\n        return \"ESE\";\n      } else if (deg > 120 && deg <= 140) {\n        return \"SE\";\n      } else if (deg > 140 && deg <= 160) {\n        return \"SSE\";\n      } else if (deg > 160 && deg <= 190) {\n        return \"S\";\n      } else if (deg > 190 && deg <= 210) {\n        return \"SSW\";\n      } else if (deg > 210 && deg <= 230) {\n        return \"SW\";\n      } else if (deg > 230 && deg <= 250) {\n        return \"WSW\";\n      } else if (deg > 250 && deg <= 280) {\n        return \"W\";\n      } else if (deg > 280 && deg <= 300) {\n        return \"WNW\";\n      } else if (deg > 300 && deg <= 320) {\n        return \"NW\";\n      } else if (deg > 320 && deg <= 355) {\n        return \"NNW\";\n      }\n    };\n\n    this.state = {\n      gifArr: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getGif(this.props.weatherData.desc);\n  }\n\n  // location: undefined,\n  // desc: undefined,\n  // currTemp: undefined,\n  // minTemp: undefined,\n  // maxTemp: undefined,\n  // humidity: undefined,\n  // windSpeed: undefined,\n  // windDir: undefined,\n  // windGust: undefined\n  render() {\n    // const { weatherData } = this.props;\n    const _this$props$weatherDa = this.props.weatherData,\n          location = _this$props$weatherDa.location,\n          desc = _this$props$weatherDa.desc,\n          currTempF = _this$props$weatherDa.currTempF,\n          maxTempF = _this$props$weatherDa.maxTempF,\n          minTempF = _this$props$weatherDa.minTempF,\n          currTempC = _this$props$weatherDa.currTempC,\n          maxTempC = _this$props$weatherDa.maxTempC,\n          minTempC = _this$props$weatherDa.minTempC,\n          humidity = _this$props$weatherDa.humidity,\n          windDir = _this$props$weatherDa.windDir,\n          windSpeedM = _this$props$weatherDa.windSpeedM,\n          windSpeedK = _this$props$weatherDa.windSpeedK,\n          index = _this$props$weatherDa.index;\n    const _this$props = this.props,\n          handleDelete = _this$props.handleDelete,\n          addToDB = _this$props.addToDB,\n          duplicateSearch = _this$props.duplicateSearch,\n          dataLimit = _this$props.dataLimit,\n          tempValue = _this$props.tempValue;\n    let direction = this.degtoDir(windDir);\n    let farStyle, celStyle, mileStyle, kiloStyle;\n\n    if (tempValue === \"F\") {\n      farStyle = {\n        display: \"inline\"\n      };\n      mileStyle = {\n        display: \"inline\"\n      };\n      celStyle = {\n        display: \"none\"\n      };\n      kiloStyle = {\n        display: \"none\"\n      };\n    } else {\n      farStyle = {\n        display: \"none\"\n      };\n      mileStyle = {\n        display: \"none\"\n      };\n      celStyle = {\n        display: \"inline\"\n      };\n      kiloStyle = {\n        display: \"inline\"\n      };\n    }\n\n    return React.createElement(\"div\", {\n      id: `user-data-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, (() => {\n      if (duplicateSearch) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"You have already selected this city.\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), \"Please search again.\"), React.createElement(\"button\", {\n          onClick: () => handleDelete(\"search\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Dismiss\"));\n      } else if (dataLimit) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"You have reached the limit of cities to save weather data.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Please delete one or more city entry and try again.\"), React.createElement(\"button\", {\n          onClick: () => handleDelete(\"search\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Dismiss\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"selected-location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, location), React.createElement(\"button\", {\n          id: \"deleteSelection\",\n          onClick: () => handleDelete(\"search\"),\n          className: \"btn waves-effect waves-light hoverable blue accent-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          id: \"addCity\",\n          onClick: addToDB,\n          className: \"btn waves-effect waves-light hoverable blue accent-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Add!\"), React.createElement(\"p\", {\n          className: \"selected-desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, desc), React.createElement(\"img\", {\n          className: \"selected-gif\",\n          srcSet: this.state.gifArr,\n          alt: \"weather gif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"additionalData\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"selected-humidity\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Humidity:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), humidity, \"%\"), React.createElement(\"p\", {\n          className: \"selected-currTemp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Currently:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: farStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, currTempF, \"\\xB0F\"), React.createElement(\"span\", {\n          style: celStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, currTempC, \"\\xB0C\")), React.createElement(\"p\", {\n          className: \"selected-maxMinTemp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: farStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"High / Low: \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), maxTempF, \"\\xB0F / \", minTempF, \"\\xB0F\"), React.createElement(\"span\", {\n          style: celStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"High / Low: \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), maxTempC, \"\\xB0C / \", minTempC, \"\\xB0C\")), React.createElement(\"p\", {\n          className: \"selected-wind\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Direction: \", direction, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }), \" Speed:\", React.createElement(\"span\", {\n          style: mileStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, windSpeedM, \"mph\"), React.createElement(\"span\", {\n          style: kiloStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, windSpeedK, \"kph\"))));\n      }\n    })());\n  }\n\n} // SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\n\nconst mapStateToProps = state => ({\n  tempValue: state.weather.temperature\n});\n\nexport default connect(mapStateToProps)(SearchResults);","map":{"version":3,"sources":["/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/components/dashboard/SearchResults.js"],"names":["React","Component","connect","PropTypes","SearchResults","constructor","props","getGif","searchTerm","arr","fetch","then","res","json","console","log","data","forEach","el","i","push","images","original","url","setState","gifArr","Math","floor","random","length","catch","err","finally","degtoDir","deg","state","undefined","componentDidMount","weatherData","desc","render","location","currTempF","maxTempF","minTempF","currTempC","maxTempC","minTempC","humidity","windDir","windSpeedM","windSpeedK","index","handleDelete","addToDB","duplicateSearch","dataLimit","tempValue","direction","farStyle","celStyle","mileStyle","kiloStyle","display","mapStateToProps","weather","temperature"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAEtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,MARmB,GAQTC,UAAD,IAAgB;AACvB,UAAIC,GAAG,GAAG,EAAV;AACAC,MAAAA,KAAK,CAAE,mFAAkFF,UAAW,qCAA/F,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAJ,QAAAA,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC1BV,UAAAA,GAAG,CAACW,IAAJ,CAASF,EAAE,CAACG,MAAH,CAAUC,QAAV,CAAmBC,GAA5B;AACD,SAFD;AAGD,OAPH,EAQGZ,IARH,CAQQC,GAAG,IAAI;AACX,aAAKY,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEhB,GAAG,CAACiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnB,GAAG,CAACoB,MAA/B,CAAD;AAAZ,SAAd;AACD,OAVH,EAWGC,KAXH,CAWSC,GAAG,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAXhB,EAYGC,OAZH,CAYWlB,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAZX;AAaD,KAvBkB;;AAAA,SA6BnBkB,QA7BmB,GA6BRC,GAAG,IAAI;AAChB,UAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAC3B,eAAO,GAAP;AACD,OAFD,MAEO,IAAIA,GAAG,GAAG,EAAN,IAAYA,GAAG,IAAI,EAAvB,EAA2B;AAChC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,EAAN,IAAYA,GAAG,IAAI,EAAvB,EAA2B;AAChC,eAAO,IAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAG,EAAtB,EAA0B;AAC/B,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,GAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,IAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,GAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,IAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,GAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,IAAP;AACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAClC,eAAO,KAAP;AACD;AACF,KA/DkB;;AAGf,SAAKC,KAAL,GAAa;AACXV,MAAAA,MAAM,EAAEW;AADG,KAAb;AAGH;;AAmBDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK9B,MAAL,CAAY,KAAKD,KAAL,CAAWgC,WAAX,CAAuBC,IAAnC;AACD;;AAsCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP;AADO,kCAGsD,KAAKlC,KAAL,CAAWgC,WAHjE;AAAA,UAECG,QAFD,yBAECA,QAFD;AAAA,UAEWF,IAFX,yBAEWA,IAFX;AAAA,UAEiBG,SAFjB,yBAEiBA,SAFjB;AAAA,UAE4BC,QAF5B,yBAE4BA,QAF5B;AAAA,UAEsCC,QAFtC,yBAEsCA,QAFtC;AAAA,UAEgDC,SAFhD,yBAEgDA,SAFhD;AAAA,UAE2DC,QAF3D,yBAE2DA,QAF3D;AAAA,UAEqEC,QAFrE,yBAEqEA,QAFrE;AAAA,UAGCC,QAHD,yBAGCA,QAHD;AAAA,UAGWC,OAHX,yBAGWA,OAHX;AAAA,UAGoBC,UAHpB,yBAGoBA,UAHpB;AAAA,UAGgCC,UAHhC,yBAGgCA,UAHhC;AAAA,UAG4CC,KAH5C,yBAG4CA,KAH5C;AAAA,wBAIkE,KAAK9C,KAJvE;AAAA,UAIC+C,YAJD,eAICA,YAJD;AAAA,UAIeC,OAJf,eAIeA,OAJf;AAAA,UAIwBC,eAJxB,eAIwBA,eAJxB;AAAA,UAIyCC,SAJzC,eAIyCA,SAJzC;AAAA,UAIoDC,SAJpD,eAIoDA,SAJpD;AAKP,QAAIC,SAAS,GAAG,KAAKzB,QAAL,CAAcgB,OAAd,CAAhB;AACA,QAAIU,QAAJ,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,SAAnC;;AACA,QAAIL,SAAS,KAAK,GAAlB,EAAuB;AACrBE,MAAAA,QAAQ,GAAG;AAACI,QAAAA,OAAO,EAAE;AAAV,OAAX;AACAF,MAAAA,SAAS,GAAG;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAZ;AACAH,MAAAA,QAAQ,GAAG;AAACG,QAAAA,OAAO,EAAE;AAAV,OAAX;AACAD,MAAAA,SAAS,GAAG;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AACF,KALA,MAKM;AACLJ,MAAAA,QAAQ,GAAG;AAACI,QAAAA,OAAO,EAAE;AAAV,OAAX;AACAF,MAAAA,SAAS,GAAG;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAZ;AACAH,MAAAA,QAAQ,GAAG;AAACG,QAAAA,OAAO,EAAE;AAAV,OAAX;AACAD,MAAAA,SAAS,GAAG;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AACD;;AACC,WACG;AAAK,MAAA,EAAE,EAAG,aAAYX,KAAM,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,MAAM;AACN,UAAIG,eAAJ,EAAqB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvC,yBADK,EAEP;AAAQ,UAAA,OAAO,EAAE,MAAMF,YAAY,CAAC,QAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFO,CAAP;AAGD,OAJD,MAIO,IAAIG,SAAJ,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFK,EAGP;AAAQ,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,QAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHO,CAAP;AAID,OALM,MAKA;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCZ,QAAnC,CADD,EAEC;AAAQ,UAAA,EAAE,EAAC,iBAAX;AAA6B,UAAA,OAAO,EAAE,MAAMY,YAAY,CAAC,QAAD,CAAxD;AACA,UAAA,SAAS,EAAC,sDADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAMC;AAAQ,UAAA,EAAE,EAAC,SAAX;AAAqB,UAAA,OAAO,EAAEC,OAA9B;AACA,UAAA,SAAS,EAAC,sDADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAND,EAWC;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8Bf,IAA9B,CAXD,EAYC;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWV,MAAjD;AAAyD,UAAA,GAAG,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZD,EAaC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1C,EAAgDuB,QAAhD,MADF,EAEE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3C,EACE;AAAM,UAAA,KAAK,EAAEW,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBjB,SAAxB,UADF,EAEE;AAAM,UAAA,KAAK,EAAEkB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBf,SAAxB,UAFF,CAFF,EAME;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAEc,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC,EAAyChB,QAAzC,cAA4DC,QAA5D,UADF,EAEE;AAAM,UAAA,KAAK,EAAEgB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC,EAAyCd,QAAzC,cAA4DC,QAA5D,UAFF,CANF,EAUE;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyCW,SAAzC,EAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnD,aACE;AAAM,UAAA,KAAK,EAAEG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBX,UAAzB,QADF,EAEE;AAAM,UAAA,KAAK,EAAEY,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBX,UAAzB,QAFF,CAVF,CAbD,CAAP;AA6BD;AACF,KAzCA,GADH,CADH;AA+CA;;AA9ImC,C,CAiJtC;AACA;AACA;AACA;;;AAEA,MAAMa,eAAe,GAAG7B,KAAK,KAAK;AAChCsB,EAAAA,SAAS,EAAEtB,KAAK,CAAC8B,OAAN,CAAcC;AADO,CAAL,CAA7B;;AAIA,eAAehE,OAAO,CAAC8D,eAAD,CAAP,CAAyB5D,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nclass SearchResults extends Component {\n\nconstructor(props) {\n    super(props);\n\n    this.state = {\n      gifArr: undefined\n    }\n}\n\ngetGif = (searchTerm) => {\n  let arr = [];\n  fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`)\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      res.data.forEach((el, i) => {\n        arr.push(el.images.original.url);\n      })\n    })\n    .then(res => {\n      this.setState({gifArr: arr[Math.floor(Math.random() * arr.length)]});\n    })\n    .catch(err => console.log(err))\n    .finally(console.log(\"gif search finished\"))\n}\n\ncomponentDidMount() {\n  this.getGif(this.props.weatherData.desc);\n}\n\ndegtoDir = deg => {\n  if (deg <= 10 && deg >= 355) {\n    return \"N\";\n  } else if (deg > 10 && deg <= 30) {\n    return \"NNE\";\n  } else if (deg > 30 && deg <= 60) {\n    return \"NE\";\n  } else if (deg > 60 && deg < 80) {\n    return \"ENE\";\n  } else if (deg >= 80 && deg <= 100) {\n    return \"E\";\n  } else if (deg > 100 && deg <= 120) {\n    return \"ESE\";\n  } else if (deg > 120 && deg <= 140) {\n    return \"SE\";\n  } else if (deg > 140 && deg <= 160) {\n    return \"SSE\";\n  } else if (deg > 160 && deg <= 190) {\n    return \"S\";\n  } else if (deg > 190 && deg <= 210) {\n    return \"SSW\";\n  } else if (deg > 210 && deg <= 230) {\n    return \"SW\";\n  } else if (deg > 230 && deg <= 250) {\n    return \"WSW\";\n  } else if (deg > 250 && deg <= 280) {\n    return \"W\";\n  } else if (deg > 280 && deg <= 300) {\n    return \"WNW\";\n  } else if (deg > 300 && deg <= 320) {\n    return \"NW\";\n  } else if (deg > 320 && deg <= 355) {\n    return \"NNW\";\n  }\n}\n\n// location: undefined,\n// desc: undefined,\n// currTemp: undefined,\n// minTemp: undefined,\n// maxTemp: undefined,\n// humidity: undefined,\n// windSpeed: undefined,\n// windDir: undefined,\n// windGust: undefined\n\nrender() {\n  // const { weatherData } = this.props;\n  const { location, desc, currTempF, maxTempF, minTempF, currTempC, maxTempC, minTempC,\n          humidity, windDir, windSpeedM, windSpeedK, index } = this.props.weatherData;\n  const { handleDelete, addToDB, duplicateSearch, dataLimit, tempValue } = this.props;\n  let direction = this.degtoDir(windDir);\n  let farStyle, celStyle, mileStyle, kiloStyle;\n  if (tempValue === \"F\") {\n    farStyle = {display: \"inline\"};\n    mileStyle = {display: \"inline\"};\n    celStyle = {display: \"none\"};\n    kiloStyle = {display: \"none\"};\n } else {\n   farStyle = {display: \"none\"};\n   mileStyle = {display: \"none\"};\n   celStyle = {display: \"inline\"};\n   kiloStyle = {display: \"inline\"};\n }\n   return (\n      <div id={`user-data-${index}`}>\n        {(() => {\n          if (duplicateSearch) {\n            return <div>\n              <p>You have already selected this city.<br/>Please search again.</p>\n            <button onClick={() => handleDelete(\"search\")}>Dismiss</button></div>\n          } else if (dataLimit) {\n            return <div>\n              <p>You have reached the limit of cities to save weather data.</p>\n              <p>Please delete one or more city entry and try again.</p>\n            <button onClick={() => handleDelete(\"search\")}>Dismiss</button></div>\n          } else {\n            return <div>\n                    <h2 className=\"selected-location\">{location}</h2>\n                    <button id=\"deleteSelection\" onClick={() => handleDelete(\"search\")}\n                    className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                      Delete\n                    </button>\n                    <button id=\"addCity\" onClick={addToDB}\n                    className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                      Add!\n                    </button>\n                    {/* <img/> */}\n                    <p className=\"selected-desc\">{desc}</p>\n                    <img className=\"selected-gif\" srcSet={this.state.gifArr} alt=\"weather gif\"/>\n                    <div className=\"additionalData\">\n                      <p className=\"selected-humidity\">Humidity:<br/>{humidity}%</p>\n                      <p className=\"selected-currTemp\">Currently:<br/>\n                        <span style={farStyle}>{currTempF}&deg;F</span>\n                        <span style={celStyle}>{currTempC}&deg;C</span>\n                      </p>\n                      <p className=\"selected-maxMinTemp\">\n                        <span style={farStyle}>High / Low: <br/>{maxTempF}&deg;F / {minTempF}&deg;F</span>\n                        <span style={celStyle}>High / Low: <br/>{maxTempC}&deg;C / {minTempC}&deg;C</span>\n                      </p>\n                      <p className=\"selected-wind\">Direction: {direction}<br/> Speed: \n                        <span style={mileStyle}>{windSpeedM}mph</span>\n                        <span style={kiloStyle}>{windSpeedK}kph</span>\n                      </p>\n                    </div>\n                </div>\n          }\n        })()}\n        \n      </div>\n    );\n  }\n}\n\n// SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  tempValue: state.weather.temperature\n})\n\nexport default connect(mapStateToProps)(SearchResults);"]},"metadata":{},"sourceType":"module"}