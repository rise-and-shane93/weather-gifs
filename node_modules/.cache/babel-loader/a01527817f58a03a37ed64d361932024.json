{"ast":null,"code":"import axios from \"axios\";\nimport { weather } from './types';\nconst config = {\n  withCredentials: true\n};\nconst ax = axios.create(config);\nexport const getWeather = url => async dispatch => {\n  const res = await ax.get(url);\n\n  try {\n    dispatch({\n      type: weather.GETWEATHER,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const handleAddToUserData = (url, data) => dispatch => {\n  ax.post(url, data).then(res => {\n    dispatch({\n      type: weather.POSTWEATHER,\n      payload: res.config.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteOneWeather = (url, data) => dispatch => {\n  const location = data.location;\n  ax.delete(url, data).then(res => {\n    dispatch({\n      type: weather.DELETEONEWEATHER,\n      payload: location\n    });\n  }).catch(err => console.log(err));\n};\nexport const changeTemp = val => dispatch => {\n  ax.put(val).then(() => {\n    dispatch({\n      type: weather.TEMPERATURE,\n      payload: val\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/rise-and-shane93/Desktop/devProjects/react/weather-gif/src/redux/actions/weather.js"],"names":["axios","weather","config","withCredentials","ax","create","getWeather","url","dispatch","res","get","type","GETWEATHER","payload","data","error","console","log","handleAddToUserData","post","then","POSTWEATHER","catch","err","deleteOneWeather","location","delete","DELETEONEWEATHER","changeTemp","val","put","TEMPERATURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,eAAe,EAAE;AADN,CAAf;AAIA,MAAMC,EAAE,GAAGJ,KAAK,CAACK,MAAN,CAAaH,MAAb,CAAX;AAEA,OAAO,MAAMI,UAAU,GAAGC,GAAG,IAAI,MAAOC,QAAP,IAAoB;AACjD,QAAMC,GAAG,GAAG,MAAML,EAAE,CAACM,GAAH,CAAOH,GAAP,CAAlB;;AACA,MAAI;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEV,OAAO,CAACW,UAAf;AAA2BC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAxC,KAAD,CAAR;AACH,GAFD,CAGA,OAAOC,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMG,mBAAmB,GAAG,CAACX,GAAD,EAAMO,IAAN,KAAeN,QAAQ,IAAI;AAC1DJ,EAAAA,EAAE,CAACe,IAAH,CAAQZ,GAAR,EAAaO,IAAb,EACCM,IADD,CACMX,GAAG,IAAI;AACTD,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,OAAO,CAACoB,WADT;AAELR,MAAAA,OAAO,EAAEJ,GAAG,CAACP,MAAJ,CAAWY;AAFf,KAAD,CAAR;AAIH,GAND,EAOCQ,KAPD,CAOOC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAPd;AAQH,CATM;AAWP,OAAO,MAAMC,gBAAgB,GAAG,CAACjB,GAAD,EAAMO,IAAN,KAAeN,QAAQ,IAAI;AACvD,QAAMiB,QAAQ,GAAGX,IAAI,CAACW,QAAtB;AACArB,EAAAA,EAAE,CAACsB,MAAH,CAAUnB,GAAV,EAAeO,IAAf,EACCM,IADD,CACMX,GAAG,IAAI;AACTD,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,OAAO,CAAC0B,gBADT;AAELd,MAAAA,OAAO,EAAEY;AAFJ,KAAD,CAAR;AAIH,GAND,EAOCH,KAPD,CAOOC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAPd;AAQH,CAVM;AAYP,OAAO,MAAMK,UAAU,GAAIC,GAAD,IAASrB,QAAQ,IAAI;AAC3CJ,EAAAA,EAAE,CAAC0B,GAAH,CAAOD,GAAP,EACCT,IADD,CACM,MAAM;AACRZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,OAAO,CAAC8B,WADT;AAELlB,MAAAA,OAAO,EAAEgB;AAFJ,KAAD,CAAR;AAIH,GAND,EAOCP,KAPD,CAOOC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAPd;AAQH,CATM","sourcesContent":["import axios from \"axios\";\nimport { weather } from './types';\n\nconst config = {\n    withCredentials: true\n}\n\nconst ax = axios.create(config);\n\nexport const getWeather = url => async (dispatch) => {\n    const res = await ax.get(url);\n    try {\n        dispatch({type: weather.GETWEATHER, payload: res.data});\n    } \n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const handleAddToUserData = (url, data) => dispatch => {\n    ax.post(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.POSTWEATHER,\n            payload: res.config.data\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const deleteOneWeather = (url, data) => dispatch => {\n    const location = data.location;\n    ax.delete(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.DELETEONEWEATHER,\n            payload: location\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const changeTemp = (val) => dispatch => {\n    ax.put(val)\n    .then(() => {\n        dispatch({\n            type: weather.TEMPERATURE,\n            payload: val\n        })\n    })\n    .catch(err => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}