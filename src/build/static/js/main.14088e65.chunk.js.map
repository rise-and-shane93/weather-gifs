{"version":3,"sources":["redux/utils/setAuthToken.js","redux/actions/types.js","redux/actions/authActions.js","redux/reducers/authReducers.js","redux/reducers/errorReducers.js","redux/reducers/weather.js","redux/reducers/index.js","redux/store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","redux/actions/weather.js","components/dashboard/SearchResults.js","components/dashboard/UserSelectedData.js","components/dashboard/UserSelectedCity.js","components/dashboard/Dashboard.js","components/layout/Courtesy.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","weather","GETWEATHER","POSTWEATHER","DELETEONEWEATHER","TEMPERATURE","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","emailNotFound","passwordIncorrect","INITAL_STATE","weatherData","temperature","combineReducers","auth","state","action","errors","savedWeatherData","JSON","parse","filter","el","location","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Navbar","className","to","style","fontFamily","Component","Landing","props","getGif","searchTerm","arr","fetch","then","res","json","console","log","data","forEach","i","push","images","original","url","setState","gifArr","Math","floor","random","length","catch","err","finally","undefined","this","srcSet","alt","width","borderRadius","letterSpacing","Register","onChange","e","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","history","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","response","withRouter","Login","clearErrorMsgs","clearMsgs","loginUser","React","createRef","emailnotfound","passwordincorrect","ref","onClick","setItem","jwt_decode","component","rest","render","ax","create","withCredentials","SearchResults","degtoDir","deg","desc","farStyle","celStyle","mileStyle","kiloStyle","currTempF","maxTempF","minTempF","currTempC","maxTempC","minTempC","humidity","windDir","windSpeedM","windSpeedK","index","handleDelete","addToDB","duplicateSearch","dataLimit","tempValue","direction","display","UserSelectedData","toggleHover","hover","urlUserName","deleteOneWeather","dataLimitFalse","iconClose","iconStyle","icon","onMouseEnter","onMouseLeave","src","delete","UserSelectedCity","Dashboard","viewCity","textContent","userSelectedCity","closest","querySelector","cityObject","storedWeatherData","selectCity","selectedCityData","current","handleTemp","changeTemp","window","reload","query","encodeURIComponent","search","lat","lng","windDirDeg","split","results","geometry","bounds","northeast","main","wind","round","temp","temp_min","temp_max","speed","renderedWeatherData","renderWeatherData","handleAddToUserData","onLogoutClick","pathname","getWeather","placeholder","locateCity","Object","keys","dataLength","map","key","config","a","async","get","val","put","Courtesy","href","rel","title","frameBorder","class","allowFullScreen","jwtToken","currentTime","Date","now","exp","App","exact","path","message","Boolean","hostname","match","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6TAYeA,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCRFC,EAAU,CACnBC,WAAY,aACZC,YAAa,cACbC,iBAAkB,mBAClBC,YAAa,eC0CJC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KDrC4B,mBCsC5BC,QAASF,IAUAG,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBlB,GAAa,GAEbgB,EAASL,EAAe,O,wCC5DpBQ,EAAUC,EAAQ,IAClBC,EAAe,CACjBC,iBAAiB,EACjBC,KAAM,GACNC,SAAS,GCPPH,EAAe,CACjBI,cAAe,GACfC,kBAAmB,I,QCFjBC,EAAe,CACjBC,YAAa,GACbC,YAAa,KCCFC,gCAAgB,CAC7BC,KHMa,WAAwC,IAA/BC,EAA8B,uDAAtBX,EAAcY,EAAQ,uCAClD,OAAQA,EAAOpB,MACX,IFHwB,mBEIpB,OAAO,eACAmB,EADP,CAEIV,iBAAkBH,EAAQc,EAAOnB,SACjCS,KAAMU,EAAOnB,UAErB,IFXoB,eEYhB,OAAO,eACAkB,EADP,CAEIR,SAAS,IAEjB,QACI,OAAOQ,IGnBjBE,OFAa,WAAwC,IAA/BF,EAA8B,uDAAtBX,EAAcY,EAAQ,uCAClD,OAAQA,EAAOpB,MACX,IHFkB,aGGd,OAAOoB,EAAOnB,QAClB,IHEyB,oBGAzB,QACI,OAAOkB,IENjB1B,QDDa,WAAmD,IAA/B0B,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAC7D,OAAOA,EAAOpB,MACV,KAAKP,EAAQC,WACT,OAAO,eACAyB,EADP,CAEIJ,YAAaK,EAAOnB,QAAQqB,iBAC5BN,YAAaI,EAAOnB,QAAQe,cAEpC,KAAKvB,EAAQE,YACT,OAAO,eACAwB,EADP,CAEIJ,YAAY,GAAD,mBACJI,EAAMJ,aADF,CAEPQ,KAAKC,MAAMJ,EAAOnB,aAG9B,KAAKR,EAAQG,iBACT,OAAO,eACAuB,EADP,CAEIJ,YAAaI,EAAMJ,YAAYU,QAAO,SAAAC,GAAE,OAAIA,EAAGC,WAAaP,EAAOnB,aAE3E,KAAKR,EAAQI,YACT,OAAO,eACAsB,EADP,CAEIH,YAAaI,EAAOnB,UAE5B,QACI,OAAOkB,ME3BbS,EAAa,CAACC,KAULC,EARDC,sBACZC,EALmB,GAOnBC,8BACEC,kBAAe,WAAf,EAAmBN,KCYNO,E,iLApBX,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEC,GAAG,IACHC,MAAO,CACLC,WAAY,aAEdH,UAAU,uCALZ,uB,GANOI,aCuENC,E,YArEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,OAAS,SAACC,GACR,IAAIC,EAAM,GACVC,MAAM,mFAAD,OAAoFF,EAApF,wCACFG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,EAAII,MAChBJ,EAAII,KAAKC,SAAQ,SAAC3B,EAAI4B,GACpBT,EAAIU,KAAK7B,EAAG8B,OAAOC,SAASC,WAG/BX,MAAK,SAAAC,GACJ,EAAKW,SAAS,CAACC,OAAQf,EAAIgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAImB,cAE3DC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,MACzBC,QAAQjB,QAAQC,IAAI,yBAnBvB,EAAKhC,MAAQ,CACXyC,YAAQQ,GAJO,E,iFA0BjBC,KAAK1B,OAAO,a,+BAIZ,OACE,yBAAKP,UAAU,4BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAWkC,OAAQD,KAAKlD,MAAMyC,OAAQW,IAAI,eACzD,2FACA,6BACA,yBAAKnC,UAAU,UACb,kBAAC,IAAD,CACEC,GAAG,YACHC,MAAO,CACLkC,MAAO,QACPC,aAAc,MACdC,cAAe,SAEjBtC,UAAU,kEAPZ,aAYF,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEC,GAAG,SACHC,MAAO,CACLkC,MAAO,QACPC,aAAc,MACdC,cAAe,SAEjBtC,UAAU,wDAPZ,kB,GArDQI,a,yBCIhBmC,E,YACJ,aAAe,IAAD,8BACZ,+CAkBFC,SAAW,SAAAC,GACT,EAAKlB,SAAL,eAAiBkB,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,SApB5B,EAuBdC,SAAW,SAAAJ,GACTA,EAAEK,iBACF,IAAMC,EAAU,CACdC,KAAM,EAAKjE,MAAMiE,KACjBC,MAAO,EAAKlE,MAAMkE,MAClBC,SAAU,EAAKnE,MAAMmE,SACrBC,UAAW,EAAKpE,MAAMoE,WAGxB,EAAK7C,MAAM8C,aAAaL,EAAS,EAAKzC,MAAM+C,SAE5CvC,QAAQC,IAAIgC,IAhCZ,EAAKhE,MAAQ,CACXiE,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXlE,OAAQ,IAPE,E,uFAWYqE,GACpBA,EAAUrE,QACZgD,KAAKV,SAAS,CACZtC,OAAQqE,EAAUrE,W,+BAuBd,IACAA,EAAWgD,KAAKlD,MAAhBE,OACR,OACE,yBAAKe,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,yBACrB,uBAAGA,UAAU,uBAAb,sBADF,iBAIA,yBAAKA,UAAU,UAAUE,MAAO,CAAEqD,YAAa,aAC7C,4BACE,uCADF,UAGA,uBAAGvD,UAAU,2BAAb,4BAC2B,kBAAC,IAAD,CAAMC,GAAG,UAAT,YAG7B,0BAAMuD,YAAU,EAACX,SAAUZ,KAAKY,UAC9B,yBAAK7C,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMiE,KAClBS,MAAOxE,EAAO+D,KACdL,GAAG,OACH/E,KAAK,OACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAO+D,SAGpB,2BAAOY,QAAQ,QAAf,QACA,0BAAM5D,UAAU,YAAYf,EAAO+D,OAErC,yBAAKhD,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMkE,MAClBQ,MAAOxE,EAAOgE,MACdN,GAAG,QACH/E,KAAK,QACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAOgE,UAGpB,2BAAOW,QAAQ,SAAf,SACA,0BAAM5D,UAAU,YAAYf,EAAOgE,QAErC,yBAAKjD,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMmE,SAClBO,MAAOxE,EAAOiE,SACdP,GAAG,WACH/E,KAAK,WACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAOiE,aAGpB,2BAAOU,QAAQ,YAAf,YACA,0BAAM5D,UAAU,YAAYf,EAAOiE,WAErC,yBAAKlD,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMoE,UAClBM,MAAOxE,EAAOkE,UACdR,GAAG,YACH/E,KAAK,WACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAOkE,cAGpB,2BAAOS,QAAQ,aAAf,oBACA,0BAAM5D,UAAU,YAAYf,EAAOkE,YAErC,yBAAKnD,UAAU,UAAUE,MAAO,CAAEqD,YAAa,aAC7C,4BACErD,MAAO,CACLkC,MAAO,QACPC,aAAc,MACdC,cAAe,QACfuB,UAAW,QAEbjG,KAAK,SACLoC,UAAU,kEARZ,oB,GAlHOI,aAkJR0D,eALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZG,OAAQF,EAAME,UAKd,CAAEmE,aRhJwB,SAACW,EAAUV,GAAX,OAAuB,SAAAtF,GAC/Cd,IACK+G,KAAK,sBAAuBD,GAC5BpD,MAAK,SAAAC,GAAG,OAAIyC,EAAQlC,KAAK,aACzBU,OAAM,SAAAC,GAAG,OACN/D,EAAS,CACLH,KDVU,aCWVC,QAASiE,EAAImC,SAASjD,aQuIvB8C,CAGbI,YAAW3B,ICrJP4B,E,YACJ,aAAe,IAAD,8BACZ,+CAqBF3B,SAAW,SAAAC,GACT,EAAKlB,SAAL,eAAiBkB,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,SAvB5B,EA0BdwB,eAAiB,WACf,EAAK9D,MAAM+D,aA3BC,EA8BdxB,SAAW,SAAAJ,GACTA,EAAEK,iBACF,IAAMiB,EAAW,CACfd,MAAO,EAAKlE,MAAMkE,MAClBC,SAAU,EAAKnE,MAAMmE,UAEvBpC,QAAQC,IAAIgD,GACZ,EAAKzD,MAAMgE,UAAUP,IAnCrB,EAAK9E,OAASsF,IAAMC,YACpB,EAAKzF,MAAQ,CACXkE,MAAO,GACPC,SAAU,GACVjE,OAAQ,IANE,E,uFAUYqE,GACpBA,EAAUxE,KAAKT,iBACjB4D,KAAK3B,MAAM+C,QAAQlC,KAAnB,qBAAsCc,KAAKlD,MAAMkE,QAG/CK,EAAUrE,QACZgD,KAAKV,SAAS,CACZtC,OAAQqE,EAAUrE,W,+BAwBd,IACAA,EAAWgD,KAAKlD,MAAhBE,OACR,OACE,yBAAKe,UAAU,aACb,yBAAKE,MAAO,CAAE2D,UAAW,QAAU7D,UAAU,OAC3C,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,yBACrB,uBAAGA,UAAU,uBAAb,sBADF,iBAIA,yBAAKA,UAAU,UAAUE,MAAO,CAAEqD,YAAa,aAC7C,4BACE,oCADF,UAGA,uBAAGvD,UAAU,2BAAb,0BACyB,kBAAC,IAAD,CAAMC,GAAG,aAAT,cAG3B,0BAAMuD,YAAU,EAACX,SAAUZ,KAAKY,UAC9B,yBAAK7C,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMkE,MAClBQ,MAAOxE,EAAOgE,MACdN,GAAG,QACH/E,KAAK,QACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAOgE,OAAShE,EAAOwF,kBAGpC,2BAAOb,QAAQ,SAAf,SACA,0BAAM5D,UAAU,YACbf,EAAOgE,MACPhE,EAAOwF,gBAGZ,yBAAKzE,UAAU,uBACb,2BACEwC,SAAUP,KAAKO,SACfI,MAAOX,KAAKlD,MAAMmE,SAClBO,MAAOxE,EAAOiE,SACdP,GAAG,WACH/E,KAAK,WACLoC,UAAW0D,IAAW,GAAI,CACxBC,QAAS1E,EAAOiE,UAAYjE,EAAOyF,sBAGvC,2BAAOd,QAAQ,YAAf,YACA,0BAAM5D,UAAU,YACbf,EAAOiE,SACPjE,EAAOyF,oBAGZ,yBAAK1E,UAAU,SAAS2E,IAAK1C,KAAKhD,QAC/BgD,KAAK3B,MAAMrB,OAAOT,cAClByD,KAAK3B,MAAMrB,OAAOR,mBAErB,yBAAKuB,UAAU,UAAUE,MAAO,CAAEqD,YAAa,aAC7C,4BACErD,MAAO,CACLkC,MAAO,QACPC,aAAc,MACdC,cAAe,QACfuB,UAAW,QAEbjG,KAAK,SACLoC,UAAU,iEACV4E,QAAS3C,KAAKmC,gBAThB,kB,GApGIhE,aAqIL0D,eALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZG,OAAQF,EAAME,UAKd,CAAEqF,UTvHqB,SAAAP,GAAQ,OAAI,SAAAhG,GACnCd,IACG+G,KAAK,mBAAoBD,GACzBpD,MAAK,SAAAC,GAAO,IAGH5D,EAAU4D,EAAII,KAAdhE,MACRgB,aAAa6G,QAAQ,WAAY7H,GAEjCD,EAAaC,GAEb,IAAMW,EAAUmH,IAAW9H,GAE3Be,EAASL,EAAeC,OAEzBkE,OAAM,SAAAC,GAAG,OACR/D,EAAS,CACPH,KDjCkB,aCkClBC,QAASiE,EAAImC,SAASjD,YSqGfqD,UT1EU,kBAAM,SAAAtG,GAC7BA,EAAS,CACPH,KDzD6B,yBU+HlBkG,CAGbK,G,QCrHaL,eAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAGCgF,EArBM,SAAC,GAAD,IAAc1D,EAAd,EAAG2E,UAAsBjG,EAAzB,EAAyBA,KAASkG,EAAlC,2CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA3E,GAAK,OACc,IAAzBxB,EAAKT,gBACH,kBAAC+B,EAAcE,GAEf,kBAAC,IAAD,CAAUL,GAAG,kB,iBCLfiF,EAAKjI,IAAMkI,OAJF,CACXC,iBAAiB,ICAfC,E,YAEN,WAAY/E,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,OAAS,SAACC,GACR,IAAIC,EAAM,GACVC,MAAM,mFAAD,OAAoFF,EAApF,wCACFG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,EAAII,MAChBJ,EAAII,KAAKC,SAAQ,SAAC3B,EAAI4B,GACpBT,EAAIU,KAAK7B,EAAG8B,OAAOC,SAASC,WAG/BX,MAAK,SAAAC,GACJ,EAAKW,SAAS,CAACC,OAAQf,EAAIgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAImB,cAE3DC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,MACzBC,QAAQjB,QAAQC,IAAI,yBAtBN,EA8BnBuE,SAAW,SAAAC,GACT,OAAIA,GAAO,IAAMA,GAAO,IACf,IACEA,EAAM,IAAMA,GAAO,GACrB,MACEA,EAAM,IAAMA,GAAO,GACrB,KACEA,EAAM,IAAMA,EAAM,GACpB,MACEA,GAAO,IAAMA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,WADF,GA1DL,EAAKxG,MAAQ,CACXyC,YAAQQ,GAJK,E,iFA0BjBlB,QAAQC,IAAIkB,KAAK3B,MAAM3B,YAAY6G,MACnCvD,KAAK1B,OAAO0B,KAAK3B,MAAM3B,YAAY6G,Q,+BAiD3B,IAMJC,EAAUC,EAAUC,EAAWC,EAN5B,SAGsD3D,KAAK3B,MAAM3B,YADhEY,EAFD,EAECA,SAAUiG,EAFX,EAEWA,KAAMK,EAFjB,EAEiBA,UAAWC,EAF5B,EAE4BA,SAAUC,EAFtC,EAEsCA,SAAUC,EAFhD,EAEgDA,UAAWC,EAF3D,EAE2DA,SAAUC,EAFrE,EAEqEA,SACpEC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,QAASC,EAHpB,EAGoBA,WAAYC,EAHhC,EAGgCA,WAAYC,EAH5C,EAG4CA,MAH5C,EAIkEtE,KAAK3B,MAAtEkG,EAJD,EAICA,aAAcC,EAJf,EAIeA,QAASC,EAJxB,EAIwBA,gBAAiBC,EAJzC,EAIyCA,UAAWC,EAJpD,EAIoDA,UACvDC,EAAY5E,KAAKqD,SAASc,GAa7B,MAXiB,MAAdQ,GACFnB,EAAW,CAACqB,QAAS,UACrBnB,EAAY,CAACmB,QAAS,UACtBpB,EAAW,CAACoB,QAAS,QACrBlB,EAAY,CAACkB,QAAS,UAEvBrB,EAAW,CAACqB,QAAS,QACrBnB,EAAY,CAACmB,QAAS,QACtBpB,EAAW,CAACoB,QAAS,UACrBlB,EAAY,CAACkB,QAAS,WAGnB,yBAAKnE,GAAE,oBAAe4D,IAEdG,EACK,6BACL,kEAAuC,6BAAvC,wBACF,4BAAQ9B,QAAS,kBAAM4B,EAAa,YAApC,YACSG,EACF,6BACL,yFACA,kFACF,4BAAQ/B,QAAS,kBAAM4B,EAAa,YAApC,YAEO,6BACC,wBAAIxG,UAAU,qBAAqBT,GACnC,4BAAQoD,GAAG,kBAAkBiC,QAAS,kBAAM4B,EAAa,WACzDxG,UAAU,wDADV,UAIA,4BAAQ2C,GAAG,UAAUiC,QAAS6B,EAC9BzG,UAAU,wDADV,QAKA,uBAAGA,UAAU,iBAAiBwF,GAC9B,yBAAKxF,UAAU,eAAekC,OAAQ,EAAKnD,MAAMyC,OAAQW,IAAI,gBAC7D,yBAAKnC,UAAU,kBACb,uBAAGA,UAAU,qBAAb,YAA0C,6BAAMmG,EAAhD,KACA,uBAAGnG,UAAU,qBAAb,aAA2C,6BACzC,0BAAME,MAAOuF,GAAWI,EAAxB,SACA,0BAAM3F,MAAOwF,GAAWM,EAAxB,UAEF,uBAAGhG,UAAU,uBACX,0BAAME,MAAOuF,GAAb,eAAmC,6BAAMK,EAAzC,WAA4DC,EAA5D,SACA,0BAAM7F,MAAOwF,GAAb,eAAmC,6BAAMO,EAAzC,WAA4DC,EAA5D,UAEF,uBAAGlG,UAAU,iBAAb,cAAyC6G,EAAU,6BAAnD,UACE,0BAAM3G,MAAOyF,GAAYU,EAAzB,OACA,0BAAMnG,MAAO0F,GAAYU,EAAzB,e,GAtIIlG,aA2Jb0D,eAJS,SAAA/E,GAAK,MAAK,CAChC6H,UAAW7H,EAAM1B,QAAQuB,eAGZkF,CAAyBuB,GC1JlC0B,E,YAEN,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KAQV0G,YAAc,WACb,EAAKzF,SAAS,CAAC0F,OAAQ,EAAKlI,MAAMkI,SAVhB,EAanBT,aAAe,WAAO,IAAD,EACqB,EAAKlG,MAArCU,EADW,EACXA,KAAMkG,EADK,EACLA,YAAa3H,EADR,EACQA,SAC3B,EAAKe,MAAM6G,iBAAX,uBAA4CD,EAA5C,YAA2D3H,GAAYyB,GACvE,EAAKV,MAAM8G,kBAdT,EAAKC,UAAY9C,IAAMC,YACvB,EAAKzF,MAAQ,CACXkI,OAAO,GAJM,E,sEAmBT,IAEJK,EAMA7B,EAAUC,EAPNkB,EAAc3E,KAAK3B,MAAnBsG,UAGLU,EADErF,KAAKlD,MAAMkI,MACD,CAACH,QAAS,QAEV,CAACA,QAAS,QAGN,MAAdF,GACDnB,EAAW,CAACqB,QAAS,UACrBpB,EAAW,CAACoB,QAAS,UAEvBrB,EAAW,CAACqB,QAAS,QACrBpB,EAAW,CAACoB,QAAS,WAdhB,MAgBwF7E,KAAK3B,MAAMU,KAAlGzB,EAhBD,EAgBCA,SAAUiG,EAhBX,EAgBWA,KAAMK,EAhBjB,EAgBiBA,UAAWC,EAhB5B,EAgB4BA,SAAUC,EAhBtC,EAgBsCA,SAAUC,EAhBhD,EAgBgDA,UAAWC,EAhB3D,EAgB2DA,SAAUC,EAhBrE,EAgBqEA,SAAUqB,EAhB/E,EAgB+EA,KACpF,OACE,yBAAKvH,UAAU,sBAAsB2C,GAAE,oBAAeV,KAAK3B,MAAMiG,OACjEiB,aAAcvF,KAAK+E,YAAaS,aAAcxF,KAAK+E,aACjD,yBAAKhH,UAAU,aAAaE,MAAOoH,EAAW1C,QAAS3C,KAAKuE,cAC1D,uCAEF,wBAAIxG,UAAU,uBAAuBT,GACrC,2BACE,0BAAMW,MAAOuF,GAAWI,EAAxB,SACA,0BAAM3F,MAAOwF,GAAWM,EAAxB,UAEF,2BAAIR,GACJ,yBAAKxF,UAAU,6BAA6B0H,IAAG,2CAAsCH,EAAtC,WAAqDpF,IAAKqD,IACzG,2BACE,0BAAMtF,MAAOuF,GAAb,MAA2BK,EAA3B,cAAiDC,EAAjD,SACA,0BAAM7F,MAAOwF,GAAb,MAA2BO,EAA3B,cAAiDC,EAAjD,e,GArDqB9F,aAsEhB0D,eALS,SAAA/E,GAAK,MAAK,CAChCJ,YAAaI,EAAM1B,QAAQsB,YAC3BiI,UAAW7H,EAAM1B,QAAQuB,eAGa,CACtCuI,iBF9C8B,SAAC7F,EAAKN,GAAN,OAAe,SAAAjD,GAC3C,IAAMwB,EAAWyB,EAAKzB,SACtB2F,EAAGyC,OAAOrG,EAAKN,GACdL,MAAK,SAAAC,GACF7C,EAAS,CACLH,KAAMP,EAAQG,iBACdK,QAAS0B,OAGhBsC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,SEoCfgC,CAEZiD,GCzEGa,E,YAEN,WAAYtH,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,OAAS,SAACC,GACR,IAAIC,EAAM,GACVC,MAAM,mFAAD,OAAoFF,EAApF,wCACFG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,EAAII,MAChBJ,EAAII,KAAKC,SAAQ,SAAC3B,EAAI4B,GACpBT,EAAIU,KAAK7B,EAAG8B,OAAOC,SAASC,WAG/BX,MAAK,SAAAC,GACJ,EAAKW,SAAS,CAACC,OAAQf,EAAIgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAImB,cAE3DC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,MACzBC,QAAQjB,QAAQC,IAAI,yBAvBN,EA8BnBuE,SAAW,SAAAC,GACT,OAAIA,GAAO,IAAMA,GAAO,IACf,IACEA,EAAM,IAAMA,GAAO,GACrB,MACEA,EAAM,IAAMA,GAAO,GACrB,KACEA,EAAM,IAAMA,EAAM,GACpB,MACEA,GAAO,IAAMA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,IACEA,EAAM,KAAOA,GAAO,IACtB,MACEA,EAAM,KAAOA,GAAO,IACtB,KACEA,EAAM,KAAOA,GAAO,IACtB,WADF,GA3DL,EAAK8B,UAAY9C,IAAMC,YACvB,EAAKzF,MAAQ,CACXkI,OAAO,EACPzF,YAAQQ,GALK,E,iFA2BjBC,KAAK1B,OAAO0B,KAAK3B,MAAMU,KAAKwE,Q,+BAuCpB,IAGJC,EAAUC,EAAUC,EAAWC,EAH5B,SAEwE3D,KAAK3B,MAAMU,KADlFzB,EADD,EACCA,SAAUiG,EADX,EACWA,KAAMW,EADjB,EACiBA,SAAUH,EAD3B,EAC2BA,UAAWH,EADtC,EACsCA,UAAWI,EADjD,EACiDA,SACtDH,EAFK,EAELA,SAAUI,EAFL,EAEKA,SAAUH,EAFf,EAEeA,SAAUK,EAFzB,EAEyBA,QAASC,EAFlC,EAEkCA,WAAYC,EAF9C,EAE8CA,WAAYM,EAF1D,EAE0DA,UAE7DC,EAAY5E,KAAKqD,SAASc,GAa5B,MAXgB,MAAdQ,GACDnB,EAAW,CAACqB,QAAS,UACrBnB,EAAY,CAACmB,QAAS,UACtBpB,EAAW,CAACoB,QAAS,QACrBlB,EAAY,CAACkB,QAAS,UAEvBrB,EAAW,CAACqB,QAAS,QACrBnB,EAAY,CAACmB,QAAS,QACtBpB,EAAW,CAACoB,QAAS,UACrBlB,EAAY,CAACkB,QAAS,WAGtB,6BACI,wBAAI9G,UAAU,qBAAqBT,GACnC,4BAAQoD,GAAG,kBAAkBiC,QAAS,kBAAM,EAAKtE,MAAMkG,aAAa,WACpExG,UAAU,wDADV,SAIA,uBAAGA,UAAU,iBAAiBwF,GAC9B,yBAAKxF,UAAU,eAAekC,OAAQD,KAAKlD,MAAMyC,OAAQW,IAAI,gBAC7D,yBAAKnC,UAAU,kBACX,uBAAGA,UAAU,qBAAb,YAA0C,6BAAMmG,EAAhD,KACA,uBAAGnG,UAAU,qBAAb,aAA2C,6BACvC,0BAAME,MAAOuF,GAAWI,EAAxB,SACA,0BAAM3F,MAAOwF,GAAWM,EAAxB,UAEJ,uBAAGhG,UAAU,uBACT,0BAAME,MAAOuF,GAAb,eAAmC,6BAAMK,EAAzC,WAA4DC,EAA5D,SACA,0BAAM7F,MAAOwF,GAAb,eAAmC,6BAAMO,EAAzC,WAA4DC,EAA5D,UAEJ,uBAAGlG,UAAU,iBAAb,cAAyC6G,EAAU,6BAAnD,UACE,0BAAM3G,MAAOyF,GAAYU,EAAzB,OACA,0BAAMnG,MAAO0F,GAAYU,EAAzB,c,GA1GiBlG,aA4HhB0D,eALS,SAAA/E,GAAK,MAAK,CAChCJ,YAAaI,EAAM1B,QAAQsB,YAC3BiI,UAAW7H,EAAM1B,QAAQuB,eAGZkF,CAA0B8D,GCtHnCC,E,YAEJ,WAAYvH,GAAQ,IAAD,8BACjB,4CAAMA,KA0CRwH,SAAW,SAAArF,GACT,GAA4B,SAAzBA,EAAEC,OAAOqF,YAAqB,CAC/B,IAAMC,EAAmBvF,EAAEC,OAAOuF,QAAQ,wBAAwBC,cAAc,MAAMH,YAChFI,EAAa,EAAK7H,MAAM8H,kBAAkB/I,QAAO,SAACC,EAAI4B,GAAL,OAAW5B,EAAGC,WAAayI,KAClF,EAAKzG,SAAS,CAAC8G,WAAYF,EAAW,KACtC,EAAKG,iBAAiBC,QAAQrI,MAAM4G,QAAU,SAhD/B,EAoDnBM,eAAiB,WACf,EAAK7F,SAAS,CAACoF,WAAW,KArDT,EAwDnB6B,WAAa,SAAC/F,GACZ,IAAI7E,EAAO6E,EAAEC,OAAOE,MACpB,EAAKtC,MAAMmI,WAAX,uBAAsC,EAAK1J,MAAMmI,YAAjD,YAAgEtJ,IAChE8K,OAAOnJ,SAASoJ,UA3DC,EA8DnBN,WAAa,SAAA5F,GACXA,EAAEK,iBAC0C,IAAxC,EAAKxC,MAAM8H,kBAAkBxG,QAC/B,EAAKL,SAAS,CAACoF,WAAW,IAE5B,IAAIiC,EAAQC,mBAAmBpG,EAAEC,OAAOoG,OAAOlG,OAC3CjE,EAAc,CAChBoK,IAAK,GACLC,IAAK,GACLzJ,SAAU,GACViG,KAAM,GACNK,UAAW,GACXE,SAAU,GACVD,SAAU,GACVE,UAAW,GACXE,SAAU,GACVD,SAAU,GACVE,SAAU,GACVE,WAAY,GACZC,WAAY,GACZ2C,WAAY,GACZ1C,MAAO,GACPgB,KAAM,IAGR5I,EAAYY,SAAWkD,EAAEC,OAAOoG,OAAOlG,MAAMsG,MAAM,KAAK,GACxD,EAAK5I,MAAM8H,kBAAkBnH,SAAQ,SAAC3B,EAAG4B,GACnCvC,EAAYY,WAAaD,EAAGC,UAC9B,EAAKgC,SAAS,CAACmF,iBAAiB,OAGpChG,MAAM,8DAAD,OAA+DkI,EAA/D,iDACFjI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAGJ,OAFAjC,EAAYoK,IAAMnI,EAAIuI,QAAQ,GAAGC,SAASC,OAAOC,UAAUP,IAC3DpK,EAAYqK,IAAMpI,EAAIuI,QAAQ,GAAGC,SAASC,OAAOC,UAAUN,IACpDtI,MAAM,uDAAD,OAAwD/B,EAAYoK,IAApE,gBAA+EpK,EAAYqK,IAA3F,8DAEbrI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,IACJvD,EAAwBuD,EAAxBvD,QAASkM,EAAe3I,EAAf2I,KAAMC,EAAS5I,EAAT4I,KAEvB7K,EAAY6G,KAAOnI,EAAQ,GAAGkM,KAC9B5K,EAAYkH,UAAYpE,KAAKgI,MAAMF,EAAKG,MACxC/K,EAAYoH,SAAWtE,KAAKgI,MAAMF,EAAKI,UACvChL,EAAYmH,SAAWrE,KAAKgI,MAAMF,EAAKK,UACvCjL,EAAYqH,UAAYvE,KAAKgI,OAAO9K,EAAYkH,UAAY,IAAM,KAClElH,EAAYuH,SAAWzE,KAAKgI,OAAO9K,EAAYoH,SAAW,IAAM,KAChEpH,EAAYsH,SAAWxE,KAAKgI,OAAO9K,EAAYmH,SAAW,IAAM,KAChEnH,EAAYwH,SAAW1E,KAAKgI,MAAMF,EAAKpD,UACvCxH,EAAY0H,WAAa5E,KAAKgI,MAAMD,EAAKK,OACzClL,EAAY2H,WAAa7E,KAAKgI,MAAmB,SAAbD,EAAKK,OACzClL,EAAYyH,QAAU3E,KAAKgI,MAAMD,EAAKjE,KACtC5G,EAAY4H,MAAQ,EAAKjG,MAAM8H,kBAAkBxG,OACjDjD,EAAY4I,KAAOlK,EAAQ,GAAGkK,QAG/B5G,MAAK,WACJ,EAAKY,SAAL,eACK,EAAKxC,MADV,CAEEJ,YAAY,eACPA,SAORgC,MAAK,WACJ,EAAKmJ,oBAAoBvB,QAAQrI,MAAM4G,QAAU,UAElDjF,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAR,oCAAyCe,OACtDC,QAAQjB,QAAQC,IAAI,4BACrB0B,EAAEC,OAAOoG,OAAOlG,MAAQ,IAvIT,EA0InBmH,kBAAoB,SAAA/I,GAClB,OAAO,kBAAC,EAAD,CAAerC,YAAaqC,KA3IlB,EA8InBwF,aAAe,SAAC5I,GACD,WAATA,GACF,EAAK2D,SAAS,CACZ5C,iBAAaqD,IAEX,EAAKjD,MAAM2H,iBACb,EAAKnF,SAAS,CAACmF,iBAAiB,IAElC,EAAKoD,oBAAoBvB,QAAQrI,MAAM4G,QAAQ,QAC7B,WAATlJ,IACT,EAAK2D,SAAS,CAAC8G,WAAY,KAC3B,EAAKC,iBAAiBC,QAAQrI,MAAM4G,QAAQ,SAzJ7B,EA6JnBL,QAAU,WACR3F,QAAQC,IAAI,aADE,MAEuB,EAAKhC,MAAlCmI,EAFM,EAENA,YAAavI,EAFP,EAEOA,YACrB,EAAK2B,MAAM0J,oBAAX,uBAA+C9C,GAAevI,GAC9D,EAAK6H,aAAa,WAjKD,EAoKnByD,cAAgB,SAAAxH,GACdA,EAAEK,iBACF,EAAKxC,MAAMxC,cAnKX,EAAKgM,oBAAsBvF,IAAMC,YACjC,EAAK8D,iBAAmB/D,IAAMC,YAG9B,EAAKzF,MAAQ,CACX2H,iBAAiB,EACjBC,WAAW,EACX0B,WAAY,IAVG,E,kFA4BjBpG,KAAK8H,kBAAkB9H,KAAKlD,MAAMJ,e,0CAGf,IAAD,OAClBmC,QAAQC,IAAIkB,KAAK3B,MAAMsG,WACvB,IAAMtF,EAAMoH,OAAOnJ,SAAS2K,SAAShB,MAAM,KACrChC,EAAc5F,EAAIA,EAAIM,OAAO,GACnCK,KAAKV,SAAL,aACE2F,eACGjF,KAAKlD,QACP,WACD,EAAKuB,MAAM6J,WAAX,uBAAsCjD,S,+BAkIlC,IAAD,OACG5I,EAAS2D,KAAK3B,MAAMxB,KAApBR,KADH,EAEoC2D,KAAK3B,MAAtC8H,EAFH,EAEGA,kBAAmBxB,EAFtB,EAEsBA,UACnBM,EAAgBjF,KAAKlD,MAArBmI,YACR,OACE,yBAAKlH,UAAU,4BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,4BACE,yCADF,IACqB1B,EAAK0E,KAAKkG,MAAM,KAAK,GACxC,uBAAGlJ,UAAU,qCAAb,8DAC6D,6BAD7D,yDAKF,0BAAM6C,SAAUZ,KAAKoG,YACnB,2BAAOzE,QAAQ,UAAf,mBACA,yBAAK5D,UAAU,WACb,2BAAOpC,KAAK,OAAOoF,KAAK,SAASoH,YAAY,oBAC7C,4BAAQxF,QAAS3C,KAAKoI,WAAYrK,UAAU,wDAA5C,aAKJ,yBAAKA,UAAU,mBAAmB2E,IAAK1C,KAAKqG,iBAAkBpI,MAAO,CAAC,QAAW,SAChC,IAA9CoK,OAAOC,KAAKtI,KAAKlD,MAAMsJ,YAAYzG,QAAuB,kBAAC,EAAD,CAAkBZ,KAAMiB,KAAKlD,MAAMsJ,WAAY7B,aAAcvE,KAAKuE,gBAG/H,yBAAKxG,UAAU,sBAAsB2E,IAAK1C,KAAK6H,oBAAqB5J,MAAO,CAAC,QAAW,WAClF+B,KAAKlD,MAAMJ,aAAc,kBAAC,EAAD,CAC5BA,YAAasD,KAAKlD,MAAMJ,YACxB6H,aAAcvE,KAAKuE,aACnBC,QAASxE,KAAKwE,QACd+D,WAAYvI,KAAK3B,MAAM8H,kBACvB1B,gBAAiBzE,KAAKlD,MAAM2H,gBAC5BC,UAAW1E,KAAKlD,MAAM4H,aAExB,yBAAK3G,UAAU,uBAAuB4E,QAAS3C,KAAK6F,UACjDM,EAAkBqC,KAAI,SAACnL,EAAI4B,GAC1B,OAAO,kBAAC,EAAD,CACGwJ,IAAKxJ,EACLF,KAAM1B,EACN4H,YAAaA,EACbX,MAAOjH,EAAGiH,MACVhH,SAAUD,EAAGC,SACbgI,KAAMjI,EAAGiI,KACTH,eAAgB,EAAKA,qBAGnC,4BACElH,MAAO,CACLkC,MAAO,QACPC,aAAc,MACdC,cAAe,QACfuB,UAAW,QAEbe,QAAS3C,KAAKgI,cACdjK,UAAU,kEARZ,UAYA,6BACA,2BAAOA,UAAU,cAAc4D,QAAQ,cAAvC,iBACA,4BAAQZ,KAAK,aAAaJ,MAAOgE,EAAWpE,SAAUP,KAAKuG,YACzD,4BAAQ5F,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,kB,GA5OUxC,aAiQT0D,gBANS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZsJ,kBAAmBrJ,EAAM1B,QAAQsB,YACjCiI,UAAW7H,EAAM1B,QAAQuB,eAKzB,CACEd,aACAkM,oBJ5P+B,SAAC1I,EAAKN,GAAN,OAAe,SAAAjD,GAC9CmH,EAAGlB,KAAK1C,EAAKN,GACZL,MAAK,SAAAC,GACF7C,EAAS,CACLH,KAAMP,EAAQE,YACdM,QAAS+C,EAAI+J,OAAO3J,UAG3Ba,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,QIqP1BqI,WJvQsB,SAAA7I,GAAG,OAAI,SAAOvD,GAAP,eAAA6M,EAAAC,OAAA,kEAAAD,EAAA,MACX1F,EAAG4F,IAAIxJ,IADI,OACvBV,EADuB,OAE7B,IACI7C,EAAS,CAACH,KAAMP,EAAQC,WAAYO,QAAS+C,EAAII,OAErD,MAAOyC,GACH3C,QAAQC,IAAI0C,GANa,uCIwQ7BgF,WJvOsB,SAACsC,GAAD,OAAS,SAAAhN,GAC/BmH,EAAG8F,IAAID,GACNpK,MAAK,WACF5C,EAAS,CACLH,KAAMP,EAAQI,YACdI,QAASkN,OAGhBlJ,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,SIyNfgC,CAQb+D,GC/PaoD,GAlBE,WACb,OACI,yBAAKjL,UAAU,YACX,yBAAKA,UAAU,kBACX,6BACI,wDACA,uBAAGkL,KAAK,8BAA8BxI,OAAO,SAASyI,IAAI,uBAAsB,yBAAKjJ,OAAO,gGAAgGC,IAAI,kBAEpM,6BACI,kDACA,4BAAQiJ,MAAM,YAAY1D,IAAI,wCAAwC2D,YAAY,IAAIC,MAAM,cAAcC,iBAAe,IAAU,2BAAG,uBAAGL,KAAK,uDAAR,gBAG9I,0CAAe,uBAAGA,KAAK,+BAA+BxI,OAAO,SAASyI,IAAI,uBAA3D,mBCO3B,GAAInN,aAAawN,SAAU,CAEzB,IAAMxO,GAAQgB,aAAawN,SAC3BzO,EAAaC,IAEb,IAAMW,GAAUmH,IAAW9H,IAE3B0C,EAAM3B,SAASL,EAAeC,KAE9B,IAAM8N,GAAcC,KAAKC,MAAQ,IAC7BhO,GAAQiO,IAAMH,KAEhB/L,EAAM3B,SAASD,KAEf4K,OAAOnJ,SAAS2L,KAAO,W,IAIrBW,G,iLAGF,OACE,kBAAC,IAAD,CAAUnM,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKM,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,IAAIhH,UAAW1E,IACjC,kBAAC,IAAD,CAAOyL,OAAK,EAACC,KAAK,YAAYhH,UAAWxC,IACzC,kBAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,SAAShH,UAAWZ,IACtC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAc2H,OAAK,EAACC,KAAK,wBAAwBhH,UAAW8C,MAE9D,kBAAC,GAAD,a,GAdMzH,aA6BH0D,oBAPf,SAAyB/E,GAEvB,MAAO,CACLiN,QAFcjN,EAAMiN,WAMTlI,CAAyB+H,I,eCzDpBI,QACW,cAA7BvD,OAAOnJ,SAAS2M,UAEe,UAA7BxD,OAAOnJ,SAAS2M,UAEhBxD,OAAOnJ,SAAS2M,SAASC,MACvB,2DCNNlH,kBACI,kBAAC,IAAD,CAAUvF,MAAOA,GACb,kBAAC,GAAD,OAEJ0M,SAASC,eAAe,SDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7L,MAAK,SAAA8L,GACjCA,EAAaC,kB","file":"static/js/main.14088e65.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply authorization token to every request if logged in\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","export const weather = {\n    GETWEATHER: 'GETWEATHER',\n    POSTWEATHER: 'POSTWEATHER',\n    DELETEONEWEATHER: 'DELETEONEWEATHER',\n    TEMPERATURE: 'TEMPERATURE'\n}\n\nexport const GET_ERRORS = \"GET_ERRORS\";\n\nexport const USER_LOADING = \"USER_LOADING\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const DELETE_ERROR_MSGS = 'DELETE_ERROR_MSGS';","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING,\n    DELETE_ERROR_MSGS\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/users/register\", userData)\n        .then(res => history.push(\"/login\")) // re-direct to login on successful register\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\nexport const clearMsgs = () => dispatch => {\n  dispatch({\n    type: DELETE_ERROR_MSGS\n  })\n}","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n        }\n}","import { GET_ERRORS, DELETE_ERROR_MSGS } from \"../actions/types\";\n\nconst initialState = {\n    emailNotFound: \"\",\n    passwordIncorrect: \"\"\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        case DELETE_ERROR_MSGS:\n            return state;\n        default:\n            return state;\n    }\n}","import { weather } from '../actions/types';\n\nconst INITAL_STATE = {\n    weatherData: [],\n    temperature: \"F\"\n}\n\nexport default function getWeather(state = INITAL_STATE, action) {\n    switch(action.type) {\n        case weather.GETWEATHER:\n            return {\n                ...state,\n                weatherData: action.payload.savedWeatherData,\n                temperature: action.payload.temperature\n            };\n        case weather.POSTWEATHER:\n            return {\n                ...state,\n                weatherData: [\n                    ...state.weatherData,\n                    JSON.parse(action.payload)\n                ]\n            }\n        case weather.DELETEONEWEATHER:\n            return {\n                ...state,\n                weatherData: state.weatherData.filter(el => el.location !== action.payload)\n            }\n        case weather.TEMPERATURE: \n            return {\n                ...state,\n                temperature: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport weatherReducer from './weather';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  weather: weatherReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n      return (\n        <div className=\"navbar-fixed\">\n          <nav className=\"z-depth-0\">\n            <div className=\"nav-wrapper white\">\n              <Link\n                to=\"/\"\n                style={{\n                  fontFamily: \"monospace\"\n                }}\n                className=\"col s5 brand-logo center black-text\"\n              >\n                {/* <i className=\"material-icons\">code</i> */}\n                Weather.GIFS\n              </Link>\n            </div>\n          </nav>\n        </div>\n      );\n    }\n  }\n  export default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gifArr: undefined\n    }\n  }\n\n  getGif = (searchTerm) => {\n    let arr = [];\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=25&offset=0&rating=G&lang=en`)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.data);\n        res.data.forEach((el, i) => {\n          arr.push(el.images.original.url);\n        })\n      })\n      .then(res => {\n        this.setState({gifArr: arr[Math.floor(Math.random() * arr.length)]});\n      })\n      .catch(err => console.log(err))\n      .finally(console.log(\"gif search finished\"))\n  }\n\n  componentDidMount() {\n    this.getGif('weather');\n  }\n\n  render() {\n    return (\n      <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <img className=\"introGif\" srcSet={this.state.gifArr} alt=\"weatherGif\" />\n            <h4>View the weather in your favorite cities with a funny .gif!</h4>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../redux/actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n\n    console.log(newUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser, clearMsgs } from \"../../redux/actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.errors = React.createRef();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(`/dashboard/${this.state.email}`); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  clearErrorMsgs = () => {\n    this.props.clearMsgs();\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(userData);\n    this.props.loginUser(userData); /* since we handle the redirect within\n    our component, we don't need to pass in this.props.history as a parameter */\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"errors\" ref={this.errors}>\n                {this.props.errors.emailNotFound}\n                {this.props.errors.passwordIncorrect}\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  onClick={this.clearErrorMsgs}\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, clearMsgs }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import axios from \"axios\";\nimport { weather } from './types';\n\nconst config = {\n    withCredentials: true\n}\n\nconst ax = axios.create(config);\n\nexport const getWeather = url => async (dispatch) => {\n    const res = await ax.get(url);\n    try {\n        dispatch({type: weather.GETWEATHER, payload: res.data});\n    } \n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const handleAddToUserData = (url, data) => dispatch => {\n    ax.post(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.POSTWEATHER,\n            payload: res.config.data\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const deleteOneWeather = (url, data) => dispatch => {\n    const location = data.location;\n    ax.delete(url, data)\n    .then(res => {\n        dispatch({\n            type: weather.DELETEONEWEATHER,\n            payload: location\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const changeTemp = (val) => dispatch => {\n    ax.put(val)\n    .then(() => {\n        dispatch({\n            type: weather.TEMPERATURE,\n            payload: val\n        })\n    })\n    .catch(err => console.log(err));\n}","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nclass SearchResults extends Component {\n\nconstructor(props) {\n    super(props);\n\n    this.state = {\n      gifArr: undefined\n    }\n}\n\ngetGif = (searchTerm) => {\n  let arr = [];\n  fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`)\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      res.data.forEach((el, i) => {\n        arr.push(el.images.original.url);\n      })\n    })\n    .then(res => {\n      this.setState({gifArr: arr[Math.floor(Math.random() * arr.length)]});\n    })\n    .catch(err => console.log(err))\n    .finally(console.log(\"gif search finished\"))\n}\n\ncomponentDidMount() {\n  console.log(this.props.weatherData.desc);\n  this.getGif(this.props.weatherData.desc);\n}\n\ndegtoDir = deg => {\n  if (deg <= 10 && deg >= 355) {\n    return \"N\";\n  } else if (deg > 10 && deg <= 30) {\n    return \"NNE\";\n  } else if (deg > 30 && deg <= 60) {\n    return \"NE\";\n  } else if (deg > 60 && deg < 80) {\n    return \"ENE\";\n  } else if (deg >= 80 && deg <= 100) {\n    return \"E\";\n  } else if (deg > 100 && deg <= 120) {\n    return \"ESE\";\n  } else if (deg > 120 && deg <= 140) {\n    return \"SE\";\n  } else if (deg > 140 && deg <= 160) {\n    return \"SSE\";\n  } else if (deg > 160 && deg <= 190) {\n    return \"S\";\n  } else if (deg > 190 && deg <= 210) {\n    return \"SSW\";\n  } else if (deg > 210 && deg <= 230) {\n    return \"SW\";\n  } else if (deg > 230 && deg <= 250) {\n    return \"WSW\";\n  } else if (deg > 250 && deg <= 280) {\n    return \"W\";\n  } else if (deg > 280 && deg <= 300) {\n    return \"WNW\";\n  } else if (deg > 300 && deg <= 320) {\n    return \"NW\";\n  } else if (deg > 320 && deg <= 355) {\n    return \"NNW\";\n  }\n}\n\n// location: undefined,\n// desc: undefined,\n// currTemp: undefined,\n// minTemp: undefined,\n// maxTemp: undefined,\n// humidity: undefined,\n// windSpeed: undefined,\n// windDir: undefined,\n// windGust: undefined\n\nrender() {\n  // const { weatherData } = this.props;\n  const { location, desc, currTempF, maxTempF, minTempF, currTempC, maxTempC, minTempC,\n          humidity, windDir, windSpeedM, windSpeedK, index } = this.props.weatherData;\n  const { handleDelete, addToDB, duplicateSearch, dataLimit, tempValue } = this.props;\n  let direction = this.degtoDir(windDir);\n  let farStyle, celStyle, mileStyle, kiloStyle;\n  if (tempValue === \"F\") {\n    farStyle = {display: \"inline\"};\n    mileStyle = {display: \"inline\"};\n    celStyle = {display: \"none\"};\n    kiloStyle = {display: \"none\"};\n } else {\n   farStyle = {display: \"none\"};\n   mileStyle = {display: \"none\"};\n   celStyle = {display: \"inline\"};\n   kiloStyle = {display: \"inline\"};\n }\n   return (\n      <div id={`user-data-${index}`}>\n        {(() => {\n          if (duplicateSearch) {\n            return <div>\n              <p>You have already selected this city.<br/>Please search again.</p>\n            <button onClick={() => handleDelete(\"search\")}>Dismiss</button></div>\n          } else if (dataLimit) {\n            return <div>\n              <p>You have reached the limit of cities to save weather data.</p>\n              <p>Please delete one or more city entry and try again.</p>\n            <button onClick={() => handleDelete(\"search\")}>Dismiss</button></div>\n          } else {\n            return <div>\n                    <h2 className=\"selected-location\">{location}</h2>\n                    <button id=\"deleteSelection\" onClick={() => handleDelete(\"search\")}\n                    className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                      Delete\n                    </button>\n                    <button id=\"addCity\" onClick={addToDB}\n                    className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                      Add!\n                    </button>\n                    {/* <img/> */}\n                    <p className=\"selected-desc\">{desc}</p>\n                    <img className=\"selected-gif\" srcSet={this.state.gifArr} alt=\"weather gif\"/>\n                    <div className=\"additionalData\">\n                      <p className=\"selected-humidity\">Humidity:<br/>{humidity}%</p>\n                      <p className=\"selected-currTemp\">Currently:<br/>\n                        <span style={farStyle}>{currTempF}&deg;F</span>\n                        <span style={celStyle}>{currTempC}&deg;C</span>\n                      </p>\n                      <p className=\"selected-maxMinTemp\">\n                        <span style={farStyle}>High / Low: <br/>{maxTempF}&deg;F / {minTempF}&deg;F</span>\n                        <span style={celStyle}>High / Low: <br/>{maxTempC}&deg;C / {minTempC}&deg;C</span>\n                      </p>\n                      <p className=\"selected-wind\">Direction: {direction}<br/> Speed: \n                        <span style={mileStyle}>{windSpeedM}mph</span>\n                        <span style={kiloStyle}>{windSpeedK}kph</span>\n                      </p>\n                    </div>\n                </div>\n          }\n        })()}\n        \n      </div>\n    );\n  }\n}\n\n// SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  tempValue: state.weather.temperature\n})\n\nexport default connect(mapStateToProps)(SearchResults);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deleteOneWeather } from '../../redux/actions/weather';\nimport { connect } from \"react-redux\";\n\nclass UserSelectedData extends Component {\n\nconstructor(props) {\n    super(props);\n    this.iconClose = React.createRef();\n    this.state = {\n      hover: false\n    }\n}\n\n\ntoggleHover = () => {\n\tthis.setState({hover: !this.state.hover})\n}\n\nhandleDelete = () => {\n  const { data, urlUserName, location } = this.props;\n  this.props.deleteOneWeather(`/api/weather/${urlUserName}/${location}`, data);\n  this.props.dataLimitFalse();\n}\n\nrender() {\n  const { tempValue } = this.props;\n  let iconStyle;\n   if (this.state.hover) {\n     iconStyle = {display: 'flex'}\n   } else {\n     iconStyle = {display: 'none'}\n   }\n  let farStyle, celStyle;\n   if (tempValue === \"F\") {\n      farStyle = {display: \"inline\"};\n      celStyle = {display: \"none\"};\n   } else {\n    farStyle = {display: \"none\"};\n    celStyle = {display: \"inline\"};\n   }\n  const { location, desc, currTempF, maxTempF, minTempF, currTempC, maxTempC, minTempC, icon } = this.props.data;\n    return (\n      <div className=\"user-selected-child\" id={`user-data-${this.props.index}`}\n      onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}>\n        <div className=\"icon-close\" style={iconStyle} onClick={this.handleDelete}>\n          <span>&times;</span>\n        </div>\n        <h6 className=\"user-selected-title\">{location}</h6>\n        <p>\n          <span style={farStyle}>{currTempF}&deg;F</span>\n          <span style={celStyle}>{currTempC}&deg;C</span>\n        </p>\n        <p>{desc}</p>\n        <img className=\"user-selected-weather-icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt={desc}/>\n        <p>\n          <span style={farStyle}>H: {maxTempF}&deg;F / L: {minTempF}&deg;F</span>\n          <span style={celStyle}>H: {maxTempC}&deg;C / L: {minTempC}&deg;C</span>\n        </p>\n      </div>\n    );\n  }\n}\n\n// SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect(mapStateToProps, {\n  deleteOneWeather\n})(UserSelectedData);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UserSelectedCity extends Component {\n\nconstructor(props) {\n    super(props);\n    this.iconClose = React.createRef();\n    this.state = {\n      hover: false,\n      gifArr: undefined\n    }\n}\n\ngetGif = (searchTerm) => {\n  let arr = [];\n  fetch(`https://api.giphy.com/v1/gifs/search?api_key=NK7bgE246YG7l7Rp55mggieuBzvJZ035&q=${searchTerm}&limit=50&offset=0&rating=G&lang=en`)\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      res.data.forEach((el, i) => {\n        arr.push(el.images.original.url);\n      })\n    })\n    .then(res => {\n      this.setState({gifArr: arr[Math.floor(Math.random() * arr.length)]});\n    })\n    .catch(err => console.log(err))\n    .finally(console.log(\"gif search finished\"))\n}\n\ncomponentDidMount() {\n  this.getGif(this.props.data.desc);\n}\n\ndegtoDir = deg => {\n  if (deg <= 10 && deg >= 355) {\n    return \"N\";\n  } else if (deg > 10 && deg <= 30) {\n    return \"NNE\";\n  } else if (deg > 30 && deg <= 60) {\n    return \"NE\";\n  } else if (deg > 60 && deg < 80) {\n    return \"ENE\";\n  } else if (deg >= 80 && deg <= 100) {\n    return \"E\";\n  } else if (deg > 100 && deg <= 120) {\n    return \"ESE\";\n  } else if (deg > 120 && deg <= 140) {\n    return \"SE\";\n  } else if (deg > 140 && deg <= 160) {\n    return \"SSE\";\n  } else if (deg > 160 && deg <= 190) {\n    return \"S\";\n  } else if (deg > 190 && deg <= 210) {\n    return \"SSW\";\n  } else if (deg > 210 && deg <= 230) {\n    return \"SW\";\n  } else if (deg > 230 && deg <= 250) {\n    return \"WSW\";\n  } else if (deg > 250 && deg <= 280) {\n    return \"W\";\n  } else if (deg > 280 && deg <= 300) {\n    return \"WNW\";\n  } else if (deg > 300 && deg <= 320) {\n    return \"NW\";\n  } else if (deg > 320 && deg <= 355) {\n    return \"NNW\";\n  }\n}\n\nrender() {\n  const { location, desc, humidity, currTempC, currTempF, maxTempC, \n    maxTempF, minTempC, minTempF, windDir, windSpeedM, windSpeedK, tempValue } = this.props.data;\n  let farStyle, celStyle, mileStyle, kiloStyle;\n  let direction = this.degtoDir(windDir);\n  // let selectedGif = this.state.gifArr[Math.floor(Math.random() * this.state.gifArr.length)];\n  if (tempValue === \"F\") {\n     farStyle = {display: \"inline\"};\n     mileStyle = {display: \"inline\"};\n     celStyle = {display: \"none\"};\n     kiloStyle = {display: \"none\"};\n  } else {\n    farStyle = {display: \"none\"};\n    mileStyle = {display: \"none\"};\n    celStyle = {display: \"inline\"};\n    kiloStyle = {display: \"inline\"};\n  }\n    return (\n    <div>\n        <h2 className=\"selected-location\">{location}</h2>\n        <button id=\"deleteSelection\" onClick={() => this.props.handleDelete(\"select\")}\n        className=\"btn waves-effect waves-light hoverable blue accent-3\">\n            Close\n        </button>\n        <p className=\"selected-desc\">{desc}</p>\n        <img className=\"selected-gif\" srcSet={this.state.gifArr} alt=\"weather gif\"/>\n        <div className=\"additionalData\">\n            <p className=\"selected-humidity\">Humidity:<br/>{humidity}%</p>\n            <p className=\"selected-currTemp\">Currently:<br/>\n                <span style={farStyle}>{currTempF}&deg;F</span>\n                <span style={celStyle}>{currTempC}&deg;C</span>\n            </p>\n            <p className=\"selected-maxMinTemp\">\n                <span style={farStyle}>High / Low: <br/>{maxTempF}&deg;F / {minTempF}&deg;F</span>\n                <span style={celStyle}>High / Low: <br/>{maxTempC}&deg;C / {minTempC}&deg;C</span>\n            </p>\n            <p className=\"selected-wind\">Direction: {direction}<br/> Speed: \n              <span style={mileStyle}>{windSpeedM}mph</span>\n              <span style={kiloStyle}>{windSpeedK}kph</span>\n            </p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// SearchResults.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect (mapStateToProps)(UserSelectedCity);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { handleAddToUserData, getWeather, changeTemp } from \"../../redux/actions/weather\";\n\nimport SearchResults from './SearchResults';\nimport UserSelectedData from './UserSelectedData';\nimport UserSelectedCity from './UserSelectedCity';\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.renderedWeatherData = React.createRef();\n    this.selectedCityData = React.createRef();\n\n    //local state will only be used for when a user is adding a city.\n    this.state = {\n      duplicateSearch: false,\n      dataLimit: false,\n      selectCity: {},\n      // weatherData: {\n        // lat: undefined,\n        // lng: undefined,\n        // location: undefined,\n        // desc: undefined,\n        // currTemp: undefined,\n        // minTemp: undefined,\n        // maxTemp: undefined,\n        // humidity: undefined,\n        // windSpeed: undefined,\n        // windDir: undefined,\n        // windGust: undefined\n      // }\n    };\n  }\n\n  componentDidUpdate() {\n    this.renderWeatherData(this.state.weatherData);\n  }\n\n  componentDidMount() {\n    console.log(this.props.tempValue);\n    const url = window.location.pathname.split('/');\n    const urlUserName = url[url.length-1];\n    this.setState({\n      urlUserName,\n      ...this.state\n    }, () => {\n      this.props.getWeather(`/api/weather/${urlUserName}`);\n    });\n  }\n\n  viewCity = e => {\n    if(e.target.textContent !== \"×\") {\n      const userSelectedCity = e.target.closest(\".user-selected-child\").querySelector(\"h6\").textContent;\n      const cityObject = this.props.storedWeatherData.filter((el, i) => el.location === userSelectedCity);\n      this.setState({selectCity: cityObject[0]});\n      this.selectedCityData.current.style.display = \"flex\";  \n    }\n  }\n\n  dataLimitFalse = () => {\n    this.setState({dataLimit: false});\n  }\n\n  handleTemp = (e) => {\n    let type = e.target.value;\n    this.props.changeTemp(`/api/weather/${this.state.urlUserName}/${type}`);\n    window.location.reload();\n  }\n\n  selectCity = e => {\n    e.preventDefault();\n    if (this.props.storedWeatherData.length === 5) {\n      this.setState({dataLimit: true});\n    }\n    let query = encodeURIComponent(e.target.search.value);\n    let weatherData = {\n      lat: \"\",\n      lng: \"\",\n      location: \"\",\n      desc: \"\",\n      currTempF: \"\",\n      minTempF: \"\",\n      maxTempF: \"\",\n      currTempC: \"\",\n      minTempC: \"\",\n      maxTempC: \"\",\n      humidity: \"\",\n      windSpeedM: \"\",\n      windSpeedK: \"\",\n      windDirDeg: \"\",\n      index: \"\",\n      icon: \"\"\n      // windGust: \"\"\n    };\n    weatherData.location = e.target.search.value.split(',')[0];\n    this.props.storedWeatherData.forEach((el,i) => {\n      if (weatherData.location === el.location) {\n        this.setState({duplicateSearch: true});\n      }\n    });\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?&address=${query}&key=AIzaSyDnNkqJyGkWjJcQxN2dGcZr5KHnw1mlB7A`)\n      .then(res => res.json())\n      .then(res => {\n        weatherData.lat = res.results[0].geometry.bounds.northeast.lat;\n        weatherData.lng = res.results[0].geometry.bounds.northeast.lng;\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${weatherData.lat}&lon=${weatherData.lng}&appid=7ce1fd394a7aaa5d61d9b5930c1b3513&units=imperial`)\n      })\n      .then(res => res.json())\n      .then(res => {\n        const { weather, main, wind } = res;\n        // weatherData.location = res.name;\n        weatherData.desc = weather[0].main;\n        weatherData.currTempF = Math.round(main.temp);\n        weatherData.minTempF = Math.round(main.temp_min);\n        weatherData.maxTempF = Math.round(main.temp_max);\n        weatherData.currTempC = Math.round((weatherData.currTempF - 32) / 1.8);\n        weatherData.minTempC = Math.round((weatherData.minTempF - 32) / 1.8);\n        weatherData.maxTempC = Math.round((weatherData.maxTempF - 32) / 1.8);\n        weatherData.humidity = Math.round(main.humidity);\n        weatherData.windSpeedM = Math.round(wind.speed);\n        weatherData.windSpeedK = Math.round(wind.speed * 1.609344);\n        weatherData.windDir = Math.round(wind.deg);\n        weatherData.index = this.props.storedWeatherData.length;\n        weatherData.icon = weather[0].icon;\n        // weatherData.windGust = Math.round(wind.gust);\n      })\n      .then(() => {\n        this.setState({\n          ...this.state,\n          weatherData: {\n            ...weatherData\n          }\n        });\n      })\n      // .then(()=> {\n      //   this.renderedWeatherData.current.innerHTML = <SearchResults weatherData={this.state.weatherData}/>;\n      // })\n      .then(() => {\n        this.renderedWeatherData.current.style.display = \"flex\";\n      })\n      .catch(err => console.log(`Something wrong happened: ${err}`))\n      .finally(console.log('weather search finished'));\n      e.target.search.value = \"\";\n  }\n\n  renderWeatherData = data => {\n    return <SearchResults weatherData={data}/>\n  }\n\n  handleDelete = (type) => {\n    if (type === \"search\") {\n      this.setState({\n        weatherData: undefined\n      });\n      if (this.state.duplicateSearch) {\n        this.setState({duplicateSearch: false});\n      }\n      this.renderedWeatherData.current.style.display=\"none\";  \n    } else if (type === \"select\") {\n      this.setState({selectCity: {}});\n      this.selectedCityData.current.style.display=\"none\";  \n    }\n  }\n\n  addToDB = () => {\n    console.log('add to db');\n    const { urlUserName, weatherData } = this.state;\n    this.props.handleAddToUserData(`/api/weather/${urlUserName}`, weatherData);\n    this.handleDelete(\"search\");\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\nrender() {\n    const { user } = this.props.auth;\n    const { storedWeatherData, tempValue } = this.props;\n    const { urlUserName } = this.state;\n    return (\n      <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                Welcome to Weather in .GIFS! Find your city to get started.<br/>\n                Then, click on a city you selected to view the .gif!\n              </p>\n            </h4>\n            <form onSubmit={this.selectCity}>\n              <label htmlFor=\"search\">Search by city:</label>\n              <div className=\"flexRow\">\n                <input type=\"text\" name=\"search\" placeholder=\"Ex: Atlanta, GA\"/>\n                <button onClick={this.locateCity} className=\"btn waves-effect waves-light hoverable blue accent-3\">\n                  Search!\n                </button>\n              </div>\n            </form>\n            <div className=\"selectedCityData\" ref={this.selectedCityData} style={{'display': 'none'}}>\n              {Object.keys(this.state.selectCity).length === 0 ? false : <UserSelectedCity data={this.state.selectCity} handleDelete={this.handleDelete}/>}\n              {/* {this.state.selectCity ? <UserSelectedCity data={this.state.selectCity}/> : false} */}\n            </div>\n            <div className=\"renderedWeatherData\" ref={this.renderedWeatherData} style={{'display': 'none'}}>\n              {!!this.state.weatherData ? <SearchResults \n              weatherData={this.state.weatherData} \n              handleDelete={this.handleDelete}\n              addToDB={this.addToDB}\n              dataLength={this.props.storedWeatherData}\n              duplicateSearch={this.state.duplicateSearch}\n              dataLimit={this.state.dataLimit}/> : false}\n            </div>\n            <div className=\"user-selcted-weather\" onClick={this.viewCity}>\n              {storedWeatherData.map((el, i) => {\n                return <UserSelectedData \n                          key={i} \n                          data={el} \n                          urlUserName={urlUserName} \n                          index={el.index} \n                          location={el.location}\n                          icon={el.icon}\n                          dataLimitFalse={this.dataLimitFalse}/>\n              })}\n            </div>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n            <div>\n            <label className=\"selectLabel\" htmlFor=\"selectTemp\">C&deg; / F&deg;</label>\n            <select name=\"selectTemp\" value={tempValue} onChange={this.handleTemp}>\n              <option value=\"F\">F&deg;</option>\n              <option value=\"C\">C&deg;</option>\n            </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  storedWeatherData: state.weather.weatherData,\n  tempValue: state.weather.temperature\n});\n\nexport default connect(\n  mapStateToProps,\n  { \n    logoutUser,\n    handleAddToUserData,\n    getWeather,\n    changeTemp\n  }\n)(Dashboard);","import React from \"react\";\n\nconst Courtesy = () => {\n    return (\n        <div className=\"courtesy\">\n            <div className=\"courtesy-inner\">\n                <div>\n                    <h5>Weather data powered by:</h5>\n                    <a href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><img srcSet=\"https://openweathermap.org/themes/openweathermap/assets/img/openweather-negative-logo-RGB.png\" alt=\"OpenWeather\"/></a>\n                </div>\n                <div>\n                    <h5>.gifs provided by:</h5>\n                    <iframe title=\"intro gif\" src=\"https://giphy.com/embed/YJBNjrvG5Ctmo\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/haydiroket-art-YJBNjrvG5Ctmo\">via GIPHY</a></p>\n                </div>\n            </div>\n            <h6>Created by <a href=\"https://www.shanecharper.com\" target=\"_blank\" rel=\"noopener noreferrer\">Shane Harper</a></h6>\n        </div>\n    );\n}\n\nexport default Courtesy;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./redux/utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./redux/actions/authActions\";\n\nimport './App.css';\n\nimport store from './redux/store';\nimport { Provider } from \"react-redux\";\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Courtesy from \"./components/layout/Courtesy\";\n\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard/:userEmail\" component={Dashboard} />\n            </Switch>\n            <Courtesy />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const message = state.message;\n  return {\n    message\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './scss/App.scss';\nimport App from './App';\nimport { render } from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}